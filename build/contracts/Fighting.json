{
  "contractName": "Fighting",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "animalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "AnimalSoldAuction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "animalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "species",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "age",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "readyTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "color",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "winCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lossCount",
          "type": "uint256"
        }
      ],
      "name": "AnimalToBid",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "ApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Id1",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Id2",
          "type": "uint256"
        }
      ],
      "name": "BreedAnimal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_species",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "age",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_readyTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_color",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "winCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lossCount",
          "type": "uint256"
        }
      ],
      "name": "DeadAnimal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "Id",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_species",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "age",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_readyTime",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_color",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "winCount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "lossCount",
          "type": "uint256"
        }
      ],
      "name": "NewAnimal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_bidAnimalId",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "name": "UpdatedAuction",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "Owners",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "animals",
      "outputs": [
        {
          "internalType": "string",
          "name": "species",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "age",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "readyTime",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "color",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "winCount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lossCount",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "auctions",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "animalId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "validate",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "bidAnimals",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "species",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "age",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "readyTime",
              "type": "uint256"
            },
            {
              "internalType": "string",
              "name": "color",
              "type": "string"
            },
            {
              "internalType": "uint256",
              "name": "winCount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "lossCount",
              "type": "uint256"
            }
          ],
          "internalType": "struct Breeding.Animal",
          "name": "myAnimal",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "alreadySold",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_animalId1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_animalId2",
          "type": "uint256"
        }
      ],
      "name": "breedAnimal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_bidAnimalId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_auctionId",
          "type": "uint256"
        }
      ],
      "name": "claimAuction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "colors",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_animalId",
          "type": "uint256"
        }
      ],
      "name": "deadAnimal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_species",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_age",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_color",
          "type": "string"
        }
      ],
      "name": "declareAnimal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_animalId",
          "type": "uint256"
        }
      ],
      "name": "declareAuction",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "fightAnimals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "animalId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "readyToFight",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "registerOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_animalId",
          "type": "uint256"
        }
      ],
      "name": "setAnimalToBid",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_auctionId",
          "type": "uint256"
        }
      ],
      "name": "updateAuction",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_fightAnimalId1",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_fightAnimalId2",
          "type": "uint256"
        }
      ],
      "name": "fight",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.0+commit.26b70077\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"animalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"AnimalSoldAuction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"animalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"species\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"readyTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"color\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lossCount\",\"type\":\"uint256\"}],\"name\":\"AnimalToBid\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Id1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Id2\",\"type\":\"uint256\"}],\"name\":\"BreedAnimal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_species\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_readyTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_color\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lossCount\",\"type\":\"uint256\"}],\"name\":\"DeadAnimal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_species\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_readyTime\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_color\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"winCount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lossCount\",\"type\":\"uint256\"}],\"name\":\"NewAnimal\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_bidAnimalId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"}],\"name\":\"UpdatedAuction\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"Owners\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"animals\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"species\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"readyTime\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"color\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"winCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lossCount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"auctions\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"animalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"price\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"validate\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bidAnimals\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"species\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"readyTime\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"color\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"winCount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lossCount\",\"type\":\"uint256\"}],\"internalType\":\"struct Breeding.Animal\",\"name\":\"myAnimal\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"alreadySold\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_animalId1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_animalId2\",\"type\":\"uint256\"}],\"name\":\"breedAnimal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_bidAnimalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_auctionId\",\"type\":\"uint256\"}],\"name\":\"claimAuction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"colors\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_animalId\",\"type\":\"uint256\"}],\"name\":\"deadAnimal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_species\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_age\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_color\",\"type\":\"string\"}],\"name\":\"declareAnimal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_animalId\",\"type\":\"uint256\"}],\"name\":\"declareAuction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_fightAnimalId1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_fightAnimalId2\",\"type\":\"uint256\"}],\"name\":\"fight\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"fightAnimals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"animalId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"readyToFight\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"registerOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_animalId\",\"type\":\"uint256\"}],\"name\":\"setAnimalToBid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_auctionId\",\"type\":\"uint256\"}],\"name\":\"updateAuction\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"returns\":{\"_0\":\"uint256 representing the amount owned by the passed address\"}},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"returns\":{\"_0\":\"address currently approved for the given token ID\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"returns\":{\"_0\":\"bool whether the given operator is approved by the given owner\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"returns\":{\"_0\":\"address currently marked as the owner of the given token ID\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/torta/OneDrive/Documents/ESILV/Semestre 2/Blockchain Programming/OPEN ZEPPELIN/node_modules/@openzeppelin/TD6-ERC721/contracts/Fighting.sol\":\"Fighting\"},\"evmVersion\":\"petersburg\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":18},\"remappings\":[]},\"sources\":{\"/C/Users/torta/OneDrive/Documents/ESILV/Semestre 2/Blockchain Programming/OPEN ZEPPELIN/node_modules/@openzeppelin/TD6-ERC721/contracts/Address.sol\":{\"keccak256\":\"0x82a1e03dff3f31b9db123770a706afc8181d367e9b5e4f751577a676b8d7948c\",\"urls\":[\"bzz-raw://8b6666685e626aa748d9a6166c911af8eb59fca7706d53f90271c1dacc324d1f\",\"dweb:/ipfs/QmRWHQjXgn9UbgCiUXqavvomryA6dy9Vha6vDZ5Wg2aE4e\"]},\"/C/Users/torta/OneDrive/Documents/ESILV/Semestre 2/Blockchain Programming/OPEN ZEPPELIN/node_modules/@openzeppelin/TD6-ERC721/contracts/BidAuction.sol\":{\"keccak256\":\"0xd52552c052386ec73d2caf4d4b7d1b529ea067c0597785a168658f5fd7826d14\",\"urls\":[\"bzz-raw://f6b5d302a9f93bd66b273f624df32e10655ade4c561e01e2aaecfcbd812414da\",\"dweb:/ipfs/Qmdw384FRT97bi1MiiAMVfiFHKD9AQe7QjYoWwGuDvji2X\"]},\"/C/Users/torta/OneDrive/Documents/ESILV/Semestre 2/Blockchain Programming/OPEN ZEPPELIN/node_modules/@openzeppelin/TD6-ERC721/contracts/Breeding.sol\":{\"keccak256\":\"0xca36a19ff64bfc99806cd9ae8ce9583444a3219e6c4c3a37ba3dbaabd8483edf\",\"urls\":[\"bzz-raw://1c3bb8f4b1e82e5c2dc4a741a9c59f694dc712b87b52051368cd989ce3c82f42\",\"dweb:/ipfs/QmPYASaLd2qUwphxWhSPn4MctEWz3ptrxi2p9gp2d68bSo\"]},\"/C/Users/torta/OneDrive/Documents/ESILV/Semestre 2/Blockchain Programming/OPEN ZEPPELIN/node_modules/@openzeppelin/TD6-ERC721/contracts/Context.sol\":{\"keccak256\":\"0x5a9fe85363fa46ed3cbbdd5dacafd05a87359878ae0ee698b65192b2ba73ba1f\",\"urls\":[\"bzz-raw://bd359950f414fd14b5cafb923e250da094cb728dd95baa2e96c20dbaf8e77285\",\"dweb:/ipfs/Qmenp6ibnwCNdw8q3tX8U5aBUNEtJGjaqwwp8R7LYZ2tKp\"]},\"/C/Users/torta/OneDrive/Documents/ESILV/Semestre 2/Blockchain Programming/OPEN ZEPPELIN/node_modules/@openzeppelin/TD6-ERC721/contracts/Counters.sol\":{\"keccak256\":\"0x6834a6d67166b91bdc72981e5db19c904e26b6eac3f906c9f9a00159e597f98e\",\"urls\":[\"bzz-raw://f244aa2bc9b83c5bfdfe3f9e0ed0e31c7eff7c4a0889dd0fc4c108cb683fe9ed\",\"dweb:/ipfs/QmRW2W9UCo5ygfAf8uAVg3igYnU83nrfKdxCPEVzVwt9cN\"]},\"/C/Users/torta/OneDrive/Documents/ESILV/Semestre 2/Blockchain Programming/OPEN ZEPPELIN/node_modules/@openzeppelin/TD6-ERC721/contracts/ERC165.sol\":{\"keccak256\":\"0x84f20cac2978780380e9b373b3f2d2249a82e19a225a90e18f5d688fa2a5ab5c\",\"urls\":[\"bzz-raw://94f1d3bc3486e1b0e24ddc1d9dd1de622953cb205ac38a0ee45f38f16afda013\",\"dweb:/ipfs/QmZ1cRJyQaufVG7fZnsX16FUssbvJBRVnmKafZ4jH6kbyB\"]},\"/C/Users/torta/OneDrive/Documents/ESILV/Semestre 2/Blockchain Programming/OPEN ZEPPELIN/node_modules/@openzeppelin/TD6-ERC721/contracts/ERC721.sol\":{\"keccak256\":\"0x52679b353ad6d622b94b5749d6370623aec00adeb749c267bf2a291b77d675f4\",\"urls\":[\"bzz-raw://85cae7c44b29ac70b9d43783b695a4eb718d7910a974a0bf173fc8e65f9d70e1\",\"dweb:/ipfs/QmeHtNpYAuGtFz8vjNMBU3J1vSpUe73c4GvkemNSJaHDEX\"]},\"/C/Users/torta/OneDrive/Documents/ESILV/Semestre 2/Blockchain Programming/OPEN ZEPPELIN/node_modules/@openzeppelin/TD6-ERC721/contracts/Fighting.sol\":{\"keccak256\":\"0x4b3def16555823bdff1ea772707076996b7b3344efdd3448f92bbaec72dcc53f\",\"urls\":[\"bzz-raw://075efae5d55311aeeac4930c6dcf2ceecb87da0b2f20d29e5723a78f4935b7a2\",\"dweb:/ipfs/QmYR5Qeu1xbfUDMDyhsCf3pTRXjwtYpiDGC7bnHbu7JG4Q\"]},\"/C/Users/torta/OneDrive/Documents/ESILV/Semestre 2/Blockchain Programming/OPEN ZEPPELIN/node_modules/@openzeppelin/TD6-ERC721/contracts/IERC165.sol\":{\"keccak256\":\"0x03af282a709a5f83159e3777bd06ab5f04226639c7dccb69a77f3db9fa671139\",\"urls\":[\"bzz-raw://1b43a5327811d6c365e9b6fe872ff7350f1974a1050a6dd4576d67ac8c3f3b3a\",\"dweb:/ipfs/QmXmo8rzBdVR3SUs8j9dfHM2MSdArusZn1UEgbUC79aTT9\"]},\"/C/Users/torta/OneDrive/Documents/ESILV/Semestre 2/Blockchain Programming/OPEN ZEPPELIN/node_modules/@openzeppelin/TD6-ERC721/contracts/IERC721.sol\":{\"keccak256\":\"0xb133256f2f9d02ae5ba25def0184fd99802b65c688571d7b1500fa3ac8af1ad8\",\"urls\":[\"bzz-raw://7f464d86e131e7b8df76aff78300fd5f6031c6bae4e2ae8dd60ab98d289af3f2\",\"dweb:/ipfs/QmPuapVg9Z5bzdGWAfxGiQNj2xx2TgsDMP26pt9UmggHH8\"]},\"/C/Users/torta/OneDrive/Documents/ESILV/Semestre 2/Blockchain Programming/OPEN ZEPPELIN/node_modules/@openzeppelin/TD6-ERC721/contracts/IERC721Receiver.sol\":{\"keccak256\":\"0x1d0fb03da7ba16850c2a02bf69363d068c7856109dfd870e98edf2a70bd96c75\",\"urls\":[\"bzz-raw://3484a05ce323fbd424393d06caa39a524c4ee495d98165f705eff7470e3a4f3a\",\"dweb:/ipfs/QmbCxMahWSzDqfTQsaRtHsK9jsQnRR3JFgfeDUe4dizoct\"]},\"/C/Users/torta/OneDrive/Documents/ESILV/Semestre 2/Blockchain Programming/OPEN ZEPPELIN/node_modules/@openzeppelin/TD6-ERC721/contracts/Ownable.sol\":{\"keccak256\":\"0xc78674c2f3143091c4bbc9a107b98d0e68c012079b698068fef224b97231c38a\",\"urls\":[\"bzz-raw://a41d348b4a1bb5be4ea3f64e965c68885b140fdae3aee9bf6a543ddb85e4853f\",\"dweb:/ipfs/QmRNZnbdZ5GPoqTyVtwXPiztJcPZ9nmosVnBTmzUfkfAoe\"]},\"/C/Users/torta/OneDrive/Documents/ESILV/Semestre 2/Blockchain Programming/OPEN ZEPPELIN/node_modules/@openzeppelin/TD6-ERC721/contracts/SafeMath.sol\":{\"keccak256\":\"0x1a9b72ce039ac5feef3eda06b4723f474312de5e60082e5b33b8c58865416f87\",\"urls\":[\"bzz-raw://8a9782061a01e931026cc2316178d8176a3a857137f3e6bf82579b5261374be2\",\"dweb:/ipfs/Qmb96GrTeUJoGbjvvZbm8FZRH2tvd8aX5tSS3LNJj7W1AV\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061015d5760003560e01c806301ffc9a714610162578063081812fc1461019f578063095ea7b3146101dc5780631220c6ed1461020557806323b872dd1461022e578063400520811461025757806342842e0e146102735780634723fc531461029c578063571a26a0146102da5780635e6bab68146103195780636352211e146103425780636f257d741461037f57806370a08231146103a8578063715018a6146103e5578063893d20e8146103fc5780638a1ce908146104275780638da5cb5b146104645780638f32d59b1461048f578063998dd3ca146104ba57806399c32907146104fd578063a10a2d851461053c578063a22cb46514610565578063b88d4fde1461058e578063bd11f69d146105b7578063c46a6d3d146105f4578063ca39e5ef1461061d578063e985e9c514610646578063ec9b6db914610683578063f22b0169146106ac578063f2fde38b146106c8575b600080fd5b34801561016e57600080fd5b5061018960048036036101849190810190613acc565b6106f1565b604051610196919061475d565b60405180910390f35b3480156101ab57600080fd5b506101c660048036036101c19190810190613af5565b610758565b6040516101d39190614602565b60405180910390f35b3480156101e857600080fd5b5061020360048036036101fe9190810190613a90565b6107dd565b005b34801561021157600080fd5b5061022c60048036036102279190810190613866565b610998565b005b34801561023a57600080fd5b50610255600480360361025091908101906138cb565b6109fe565b005b610271600480360361026c9190810190613b1e565b610a5e565b005b34801561027f57600080fd5b5061029a600480360361029591908101906138cb565b610b94565b005b3480156102a857600080fd5b506102c360048036036102be9190810190613af5565b610bb4565b6040516102d1929190614c5f565b60405180910390f35b3480156102e657600080fd5b5061030160048036036102fc9190810190613af5565b610be5565b60405161031093929190614c88565b60405180910390f35b34801561032557600080fd5b50610340600480360361033b9190810190613b1e565b610c29565b005b34801561034e57600080fd5b5061036960048036036103649190810190613af5565b6112c0565b6040516103769190614602565b60405180910390f35b34801561038b57600080fd5b506103a660048036036103a191908101906139d1565b611372565b005b3480156103b457600080fd5b506103cf60048036036103ca9190810190613866565b611624565b6040516103dc9190614b1e565b60405180910390f35b3480156103f157600080fd5b506103fa6116e3565b005b34801561040857600080fd5b506104116117eb565b60405161041e919061473b565b60405180910390f35b34801561043357600080fd5b5061044e60048036036104499190810190613af5565b611879565b60405161045b9190614602565b60405180910390f35b34801561047057600080fd5b506104796118b5565b6040516104869190614602565b60405180910390f35b34801561049b57600080fd5b506104a46118df565b6040516104b1919061475d565b60405180910390f35b3480156104c657600080fd5b506104e160048036036104dc9190810190613af5565b61193e565b6040516104f497969594939291906147bc565b60405180910390f35b34801561050957600080fd5b50610524600480360361051f9190810190613af5565b611b55565b60405161053393929190614ae0565b60405180910390f35b34801561054857600080fd5b50610563600480360361055e9190810190613af5565b611db1565b005b34801561057157600080fd5b5061058c60048036036105879190810190613995565b612302565b005b34801561059a57600080fd5b506105b560048036036105b0919081019061391a565b612483565b005b3480156105c357600080fd5b506105de60048036036105d99190810190613af5565b6124e5565b6040516105eb9190614778565b60405180910390f35b34801561060057600080fd5b5061061b60048036036106169190810190613b1e565b61259e565b005b34801561062957600080fd5b50610644600480360361063f9190810190613b1e565b612701565b005b34801561065257600080fd5b5061066d6004803603610668919081019061388f565b61296e565b60405161067a919061475d565b60405180910390f35b34801561068f57600080fd5b506106aa60048036036106a59190810190613af5565b612a02565b005b6106c660048036036106c19190810190613b1e565b612c56565b005b3480156106d457600080fd5b506106ef60048036036106ea9190810190613866565b612d79565b005b6000806000837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190815260200160002060009054906101000a900460ff169050919050565b600061076382612dcc565b6107a2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610799906149e0565b60405180910390fd5b6002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60006107e8826112c0565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610859576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161085090614a60565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16610878612e3e565b73ffffffffffffffffffffffffffffffffffffffff1614806108a757506108a6816108a1612e3e565b61296e565b5b6108e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108dd90614960565b60405180910390fd5b826002600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550818373ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a4505050565b6008819080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610a0f610a09612e3e565b82612e46565b610a4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a4590614ac0565b60405180910390fd5b610a59838383612f24565b505050565b80610a6881613153565b610aa7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a9e90614a80565b60405180910390fd5b610aaf6135b7565b6040518060600160405280848152602001858152602001600015158152509050600f819080600181540180825580915050600190039060005260206000209060030201600090919091909150600082015181600001556020820151816001015560408201518160020160006101000a81548160ff02191690831515021790555050506000600f805490509050336011600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050565b610baf83838360405180602001604052806000815250612483565b505050565b60148181548110610bc157fe5b90600052602060002090600202016000915090508060000154908060010154905082565b600f8181548110610bf257fe5b90600052602060002090600302016000915090508060000154908060010154908060020160009054906101000a900460ff16905083565b81600260068281548110610c3957fe5b9060005260206000209060070201600201541015610c8c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c83906149c0565b60405180910390fd5b600160068281548110610c9b57fe5b9060005260206000209060070201600301541015610cee576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ce590614840565b60405180910390fd5b81600260068281548110610cfe57fe5b9060005260206000209060070201600201541015610d51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d48906149c0565b60405180910390fd5b600160068281548110610d6057fe5b9060005260206000209060070201600301541015610db3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610daa90614840565b60405180910390fd5b83600b600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e55576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e4c90614aa0565b60405180910390fd5b83600b600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ef7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610eee90614aa0565b60405180910390fd5b6000610f036002613219565b905060606001821415610fce5760068881548110610f1d57fe5b90600052602060002090600702016004018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015610fc25780601f10610f9757610100808354040283529160200191610fc2565b820191906000526020600020905b815481529060010190602001808311610fa557829003601f168201915b50505050509050611088565b60068781548110610fdb57fe5b90600052602060002090600702016004018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156110805780601f1061105557610100808354040283529160200191611080565b820191906000526020600020905b81548152906001019060200180831161106357829003601f168201915b505050505090505b7f8a6fde0c0f8077884948daef31fc0b7565d15b1944dbd05612fe54e358bb7a1688886040516110b9929190614c5f565b60405180910390a161126e600b60008a815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660068a8154811061110557fe5b90600052602060002090600702016000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156111aa5780601f1061117f576101008083540402835291602001916111aa565b820191906000526020600020905b81548152906001019060200180831161118d57829003601f168201915b5050505050600160068c815481106111be57fe5b90600052602060002090600702016001018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156112635780601f1061123857610100808354040283529160200191611263565b820191906000526020600020905b81548152906001019060200180831161124657829003601f168201915b505050505085611372565b60016006888154811061127d57fe5b9060005260206000209060070201600301819055506001600689815481106112a157fe5b9060005260206000209060070201600301819055505050505050505050565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611369576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611360906149a0565b60405180910390fd5b80915050919050565b8473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146113e0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016113d790614a20565b60405180910390fd5b6113e86135da565b6040518060e001604052808681526020018481526020018581526020016001815260200183815260200160008152602001600081525090506114736001600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461327790919063ffffffff16565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600681908060018154018082558091505060019003906000526020600020906007020160009091909190915060008201518160000190805190602001906114fe929190613617565b50602082015181600101908051906020019061151b929190613617565b506040820151816002015560608201518160030155608082015181600401908051906020019061154c929190613617565b5060a0820151816005015560c082015181600601555050611579600160075461327790919063ffffffff16565b60078190555033600b6000600754815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f2ed0a6a4f66e6a39321eb2bbd734537cacdbc5aec9e3686afdb9a5c1bbdb1b27600754868587600087600080604051611614989796959493929190614b39565b60405180910390a1505050505050565b60008073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415611695576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161168c90614980565b60405180910390fd5b6116dc600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206132cc565b9050919050565b6116eb6118df565b61172a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161172190614a00565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a36000600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6060600880548060200260200160405190810160405280929190818152602001828054801561186f57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311611825575b5050505050905090565b6008818154811061188657fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611922612e3e565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6006818154811061194b57fe5b9060005260206000209060070201600091509050806000018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156119f75780601f106119cc576101008083540402835291602001916119f7565b820191906000526020600020905b8154815290600101906020018083116119da57829003601f168201915b505050505090806001018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611a955780601f10611a6a57610100808354040283529160200191611a95565b820191906000526020600020905b815481529060010190602001808311611a7857829003601f168201915b505050505090806002015490806003015490806004018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611b3f5780601f10611b1457610100808354040283529160200191611b3f565b820191906000526020600020905b815481529060010190602001808311611b2257829003601f168201915b5050505050908060050154908060060154905087565b600e8181548110611b6257fe5b9060005260206000209060090201600091509050806000016040518060e0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611c1e5780601f10611bf357610100808354040283529160200191611c1e565b820191906000526020600020905b815481529060010190602001808311611c0157829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611cc05780601f10611c9557610100808354040283529160200191611cc0565b820191906000526020600020905b815481529060010190602001808311611ca357829003601f168201915b505050505081526020016002820154815260200160038201548152602001600482018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611d765780601f10611d4b57610100808354040283529160200191611d76565b820191906000526020600020905b815481529060010190602001808311611d5957829003601f168201915b5050505050815260200160058201548152602001600682015481525050908060070154908060080160009054906101000a900460ff16905083565b80600b600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611e53576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e4a90614aa0565b60405180910390fd5b611e5b613697565b604051806060016040528060068581548110611e7357fe5b90600052602060002090600702016040518060e0016040529081600082018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611f255780601f10611efa57610100808354040283529160200191611f25565b820191906000526020600020905b815481529060010190602001808311611f0857829003601f168201915b50505050508152602001600182018054600181600116156101000203166002900480601f016020809104026020016040519081016040528092919081815260200182805460018160011615610100020316600290048015611fc75780601f10611f9c57610100808354040283529160200191611fc7565b820191906000526020600020905b815481529060010190602001808311611faa57829003601f168201915b505050505081526020016002820154815260200160038201548152602001600482018054600181600116156101000203166002900480601f01602080910402602001604051908101604052809291908181526020018280546001816001161561010002031660029004801561207d5780601f106120525761010080835404028352916020019161207d565b820191906000526020600020905b81548152906001019060200180831161206057829003601f168201915b5050505050815260200160058201548152602001600682015481525050815260200160018152602001600015158152509050600e8190806001815401808255809150506001900390600052602060002090600902016000909190919091506000820151816000016000820151816000019080519060200190612100929190613617565b50602082015181600101908051906020019061211d929190613617565b506040820151816002015560608201518160030155608082015181600401908051906020019061214e929190613617565b5060a0820151816005015560c0820151816006015550506020820151816007015560408201518160080160006101000a81548160ff02191690831515021790555050506000600e8054905090508360136000838152602001908152602001600020819055507f35fd122dfbf8007a96d6033dd1956c772bfc1009f4e22dba88c751beb2c94ebd600b600086815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16856006878154811061221657fe5b90600052602060002090600702016000016006888154811061223457fe5b90600052602060002090600702016001016006898154811061225257fe5b90600052602060002090600702016002015460068a8154811061227157fe5b90600052602060002090600702016003015460068b8154811061229057fe5b906000526020600020906007020160040160068c815481106122ae57fe5b90600052602060002090600702016005015460068d815481106122cd57fe5b9060005260206000209060070201600601546040516122f499989796959493929190614699565b60405180910390a150505050565b61230a612e3e565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415612378576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161236f906148e0565b60405180910390fd5b8060046000612385612e3e565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff16612432612e3e565b73ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c3183604051612477919061475d565b60405180910390a35050565b61249461248e612e3e565b83612e46565b6124d3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016124ca90614ac0565b60405180910390fd5b6124df848484846132da565b50505050565b600981815481106124f257fe5b906000526020600020016000915090508054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156125965780601f1061256b57610100808354040283529160200191612596565b820191906000526020600020905b81548152906001019060200180831161257957829003601f168201915b505050505081565b80600f81815481106125ac57fe5b906000526020600020906003020160020160009054906101000a900460ff1661260a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161260190614900565b60405180910390fd5b61265b6012600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336013600087815260200190815260200160002054612f24565b7f336caae23f7c926c563a756c493d2e4186fe8ea365ea75f8813cb36882a2c0886012600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16336013600087815260200190815260200160002054600f86815481106126d257fe5b9060005260206000209060030201600101546040516126f49493929190614654565b60405180910390a1505050565b81600b600082815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146127a3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161279a90614aa0565b60405180910390fd5b6202a300601483815481106127b457fe5b9060005260206000209060020201600101541015612807576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016127fe90614940565b60405180910390fd5b60006128136002613219565b905060018114156128c55761286e600160066014878154811061283257fe5b9060005260206000209060020201600001548154811061284e57fe5b90600052602060002090600702016005015461327790919063ffffffff16565b506128bf600160066014868154811061288357fe5b9060005260206000209060020201600001548154811061289f57fe5b90600052602060002090600702016006015461327790919063ffffffff16565b50612968565b61291560016006601486815481106128d957fe5b906000526020600020906002020160000154815481106128f557fe5b90600052602060002090600702016005015461327790919063ffffffff16565b50612966600160066014878154811061292a57fe5b9060005260206000209060020201600001548154811061294657fe5b90600052602060002090600702016006015461327790919063ffffffff16565b505b50505050565b6000600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b6000600b600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050612a8d6001600c60008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546132eb90919063ffffffff16565b600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555060068281548110612add57fe5b906000526020600020906007020160008082016000612afc91906136c0565b600182016000612b0c91906136c0565b60028201600090556003820160009055600482016000612b2c91906136c0565b6005820160009055600682016000905550507ff341316c37c0df80453d7a29598468138ffcfe7c833ec00e80ccc5772369905b8260068481548110612b6d57fe5b906000526020600020906007020160000160068581548110612b8b57fe5b906000526020600020906007020160010160068681548110612ba957fe5b90600052602060002090600702016002015460068781548110612bc857fe5b90600052602060002090600702016003015460068881548110612be757fe5b906000526020600020906007020160040160068981548110612c0557fe5b90600052602060002090600702016005015460068a81548110612c2457fe5b906000526020600020906007020160060154604051612c4a989796959493929190614bcc565b60405180910390a15050565b803373ffffffffffffffffffffffffffffffffffffffff166011600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612cf8576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612cef90614880565b60405180910390fd5b82600f8381548110612d0657fe5b9060005260206000209060030201600101819055507fc33aa4393fdbbf1d92280c505235f4a5f7ad1524676d96bb2376428fe731d43433600f8481548110612d4a57fe5b90600052602060002090600302016000015485604051612d6c9392919061461d565b60405180910390a1505050565b612d816118df565b612dc0576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612db790614a00565b60405180910390fd5b612dc981613335565b50565b6000806001600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415915050919050565b600033905090565b6000612e5182612dcc565b612e90576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612e8790614920565b60405180910390fd5b6000612e9b836112c0565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480612f0a57508373ffffffffffffffffffffffffffffffffffffffff16612ef284610758565b73ffffffffffffffffffffffffffffffffffffffff16145b80612f1b5750612f1a818561296e565b5b91505092915050565b8273ffffffffffffffffffffffffffffffffffffffff16612f44826112c0565b73ffffffffffffffffffffffffffffffffffffffff1614612f9a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612f9190614a40565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141561300a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401613001906148c0565b60405180910390fd5b61301381613465565b61305a600360008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613523565b6130a1600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020613546565b816001600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550808273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4505050565b6000806001905060008090505b600f8054905081101561320f573373ffffffffffffffffffffffffffffffffffffffff166011600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480156131f8575083600f82815481106131e457fe5b906000526020600020906003020160000154145b1561320257600091505b8080600101915050613160565b5080915050919050565b60006132316001600a5461327790919063ffffffff16565b600a81905550814233600a5460405160200161324f939291906145c5565b6040516020818303038152906040528051906020012060001c8161326f57fe5b069050919050565b6000808284019050838110156132c2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016132b9906148a0565b60405180910390fd5b8091505092915050565b600081600001549050919050565b6132e5848484612f24565b50505050565b600061332d83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061355c565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156133a5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161339c90614860565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff166002600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146135205760006002600083815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b50565b61353b600182600001546132eb90919063ffffffff16565b816000018190555050565b6001816000016000828254019250508190555050565b60008383111582906135a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161359b919061479a565b60405180910390fd5b5060008385039050809150509392505050565b604051806060016040528060008152602001600081526020016000151581525090565b6040518060e00160405280606081526020016060815260200160008152602001600081526020016060815260200160008152602001600081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061365857805160ff1916838001178555613686565b82800160010185558215613686579182015b8281111561368557825182559160200191906001019061366a565b5b5090506136939190613708565b5090565b60405180606001604052806136aa61372d565b8152602001600081526020016000151581525090565b50805460018160011615610100020316600290046000825580601f106136e65750613705565b601f0160209004906000526020600020908101906137049190613708565b5b50565b61372a91905b8082111561372657600081600090555060010161370e565b5090565b90565b6040518060e00160405280606081526020016060815260200160008152602001600081526020016060815260200160008152602001600081525090565b60008135905061377981614f26565b92915050565b60008135905061378e81614f3d565b92915050565b6000813590506137a381614f54565b92915050565b600082601f8301126137ba57600080fd5b81356137cd6137c882614cec565b614cbf565b915080825260208301602083018583830111156137e957600080fd5b6137f4838284614e98565b50505092915050565b600082601f83011261380e57600080fd5b813561382161381c82614d18565b614cbf565b9150808252602083016020830185838301111561383d57600080fd5b613848838284614e98565b50505092915050565b60008135905061386081614f6b565b92915050565b60006020828403121561387857600080fd5b60006138868482850161376a565b91505092915050565b600080604083850312156138a257600080fd5b60006138b08582860161376a565b92505060206138c18582860161376a565b9150509250929050565b6000806000606084860312156138e057600080fd5b60006138ee8682870161376a565b93505060206138ff8682870161376a565b925050604061391086828701613851565b9150509250925092565b6000806000806080858703121561393057600080fd5b600061393e8782880161376a565b945050602061394f8782880161376a565b935050604061396087828801613851565b925050606085013567ffffffffffffffff81111561397d57600080fd5b613989878288016137a9565b91505092959194509250565b600080604083850312156139a857600080fd5b60006139b68582860161376a565b92505060206139c78582860161377f565b9150509250929050565b600080600080600060a086880312156139e957600080fd5b60006139f78882890161376a565b955050602086013567ffffffffffffffff811115613a1457600080fd5b613a20888289016137fd565b9450506040613a3188828901613851565b935050606086013567ffffffffffffffff811115613a4e57600080fd5b613a5a888289016137fd565b925050608086013567ffffffffffffffff811115613a7757600080fd5b613a83888289016137fd565b9150509295509295909350565b60008060408385031215613aa357600080fd5b6000613ab18582860161376a565b9250506020613ac285828601613851565b9150509250929050565b600060208284031215613ade57600080fd5b6000613aec84828501613794565b91505092915050565b600060208284031215613b0757600080fd5b6000613b1584828501613851565b91505092915050565b60008060408385031215613b3157600080fd5b6000613b3f85828601613851565b9250506020613b5085828601613851565b9150509250929050565b6000613b668383613b98565b60208301905092915050565b613b7b81614e50565b82525050565b613b92613b8d82614ddc565b614eda565b82525050565b613ba181614dca565b82525050565b613bb081614dca565b82525050565b6000613bc182614d69565b613bcb8185614d97565b9350613bd683614d44565b8060005b83811015613c07578151613bee8882613b5a565b9750613bf983614d8a565b925050600181019050613bda565b5085935050505092915050565b613c1d81614dee565b82525050565b613c2c81614e62565b82525050565b6000613c3d82614d7f565b613c478185614db9565b9350613c57818560208601614ea7565b613c6081614f08565b840191505092915050565b6000613c7682614d74565b613c808185614da8565b9350613c90818560208601614ea7565b613c9981614f08565b840191505092915050565b6000613caf82614d74565b613cb98185614db9565b9350613cc9818560208601614ea7565b613cd281614f08565b840191505092915050565b600081546001811660008114613cfa5760018114613d2057613d64565b607f6002830416613d0b8187614db9565b955060ff198316865260208601935050613d64565b60028204613d2e8187614db9565b9550613d3985614d54565b60005b82811015613d5b57815481890152600182019150602081019050613d3c565b80880195505050505b505092915050565b6000613d79602f83614db9565b91507f416e696d616c20616c726561647920636f75706c656420696e2074686520707260008301527f6576696f75732036206d6f6e74687300000000000000000000000000000000006020830152604082019050919050565b6000613ddf602683614db9565b91507f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008301527f64647265737300000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613e45603883614db9565b91507f20596f752063616e2774206368616e676520746869732061756374696f6e2c2060008301527f6974206973206e6f7420796f75722061756374696f6e202100000000000000006020830152604082019050919050565b6000613eab601b83614db9565b91507f536166654d6174683a206164646974696f6e206f766572666c6f7700000000006000830152602082019050919050565b6000613eeb602483614db9565b91507f4552433732313a207472616e7366657220746f20746865207a65726f2061646460008301527f72657373000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000613f51601983614db9565b91507f4552433732313a20617070726f766520746f2063616c6c6572000000000000006000830152602082019050919050565b6000613f91602c83614db9565b91507f41756374696f6e206e6f742076616c6964617465642c206974206973206e6f7460008301527f20796f757220416e696d616c00000000000000000000000000000000000000006020830152604082019050919050565b6000613ff7602c83614db9565b91507f4552433732313a206f70657261746f7220717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b600061405d602983614db9565b91507f54686520616e696d616c20796f752077616e7420746f2066696768742069732060008301527f6e6f7420726561647900000000000000000000000000000000000000000000006020830152604082019050919050565b60006140c3603883614db9565b91507f4552433732313a20617070726f76652063616c6c6572206973206e6f74206f7760008301527f6e6572206e6f7220617070726f76656420666f7220616c6c00000000000000006020830152604082019050919050565b6000614129602a83614db9565b91507f4552433732313a2062616c616e636520717565727920666f7220746865207a6560008301527f726f2061646472657373000000000000000000000000000000000000000000006020830152604082019050919050565b600061418f602983614db9565b91507f4552433732313a206f776e657220717565727920666f72206e6f6e657869737460008301527f656e7420746f6b656e00000000000000000000000000000000000000000000006020830152604082019050919050565b60006141f5601a83614db9565b91507f416e696d616c20746f6f20796f756e6720746f20636f75706c650000000000006000830152602082019050919050565b6000614235602c83614db9565b91507f4552433732313a20617070726f76656420717565727920666f72206e6f6e657860008301527f697374656e7420746f6b656e00000000000000000000000000000000000000006020830152604082019050919050565b600061429b602083614db9565b91507f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726000830152602082019050919050565b60006142db602183614db9565b91507f596f7520617265206e6f74206465636c6172696e6720796f757220616e696d6160008301527f6c000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614341602983614db9565b91507f4552433732313a207472616e73666572206f6620746f6b656e2074686174206960008301527f73206e6f74206f776e00000000000000000000000000000000000000000000006020830152604082019050919050565b60006143a7602183614db9565b91507f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560008301527f72000000000000000000000000000000000000000000000000000000000000006020830152604082019050919050565b600061440d602683614db9565b91507f596f7520616c7265616479206861766520616e2061756374696f6e2c2075706460008301527f61746520697400000000000000000000000000000000000000000000000000006020830152604082019050919050565b6000614473600083614db9565b9150600082019050919050565b600061448d603183614db9565b91507f4552433732313a207472616e736665722063616c6c6572206973206e6f74206f60008301527f776e6572206e6f7220617070726f7665640000000000000000000000000000006020830152604082019050919050565b600060e08301600083015184820360008601526145038282613c6b565b9150506020830151848203602086015261451d8282613c6b565b91505060408301516145326040860182614590565b5060608301516145456060860182614590565b506080830151848203608086015261455d8282613c6b565b91505060a083015161457260a0860182614590565b5060c083015161458560c0860182614590565b508091505092915050565b61459981614e46565b82525050565b6145a881614e46565b82525050565b6145bf6145ba82614e46565b614efe565b82525050565b60006145d182866145ae565b6020820191506145e18285613b81565b6014820191506145f182846145ae565b602082019150819050949350505050565b60006020820190506146176000830184613ba7565b92915050565b60006060820190506146326000830186613b72565b61463f602083018561459f565b61464c604083018461459f565b949350505050565b60006080820190506146696000830187613ba7565b6146766020830186613b72565b614683604083018561459f565b614690606083018461459f565b95945050505050565b6000610120820190506146af600083018c613ba7565b6146bc602083018b61459f565b81810360408301526146ce818a613cdd565b905081810360608301526146e28189613cdd565b90506146f1608083018861459f565b6146fe60a083018761459f565b81810360c08301526147108186613cdd565b905061471f60e083018561459f565b61472d61010083018461459f565b9a9950505050505050505050565b600060208201905081810360008301526147558184613bb6565b905092915050565b60006020820190506147726000830184613c14565b92915050565b600060208201905081810360008301526147928184613ca4565b905092915050565b600060208201905081810360008301526147b48184613c32565b905092915050565b600060e08201905081810360008301526147d6818a613ca4565b905081810360208301526147ea8189613ca4565b90506147f9604083018861459f565b614806606083018761459f565b81810360808301526148188186613ca4565b905061482760a083018561459f565b61483460c083018461459f565b98975050505050505050565b6000602082019050818103600083015261485981613d6c565b9050919050565b6000602082019050818103600083015261487981613dd2565b9050919050565b6000602082019050818103600083015261489981613e38565b9050919050565b600060208201905081810360008301526148b981613e9e565b9050919050565b600060208201905081810360008301526148d981613ede565b9050919050565b600060208201905081810360008301526148f981613f44565b9050919050565b6000602082019050818103600083015261491981613f84565b9050919050565b6000602082019050818103600083015261493981613fea565b9050919050565b6000602082019050818103600083015261495981614050565b9050919050565b60006020820190508181036000830152614979816140b6565b9050919050565b600060208201905081810360008301526149998161411c565b9050919050565b600060208201905081810360008301526149b981614182565b9050919050565b600060208201905081810360008301526149d9816141e8565b9050919050565b600060208201905081810360008301526149f981614228565b9050919050565b60006020820190508181036000830152614a198161428e565b9050919050565b60006020820190508181036000830152614a39816142ce565b9050919050565b60006020820190508181036000830152614a5981614334565b9050919050565b60006020820190508181036000830152614a798161439a565b9050919050565b60006020820190508181036000830152614a9981614400565b9050919050565b60006020820190508181036000830152614ab981614466565b9050919050565b60006020820190508181036000830152614ad981614480565b9050919050565b60006060820190508181036000830152614afa81866144e6565b9050614b09602083018561459f565b614b166040830184613c14565b949350505050565b6000602082019050614b33600083018461459f565b92915050565b600061010082019050614b4f600083018b61459f565b8181036020830152614b61818a613c32565b90508181036040830152614b758189613c32565b9050614b84606083018861459f565b614b916080830187613c23565b81810360a0830152614ba38186613c32565b9050614bb260c0830185613c23565b614bbf60e0830184613c23565b9998505050505050505050565b600061010082019050614be2600083018b61459f565b8181036020830152614bf4818a613cdd565b90508181036040830152614c088189613cdd565b9050614c17606083018861459f565b614c24608083018761459f565b81810360a0830152614c368186613cdd565b9050614c4560c083018561459f565b614c5260e083018461459f565b9998505050505050505050565b6000604082019050614c74600083018561459f565b614c81602083018461459f565b9392505050565b6000606082019050614c9d600083018661459f565b614caa602083018561459f565b614cb76040830184613c14565b949350505050565b6000604051905081810181811067ffffffffffffffff82111715614ce257600080fd5b8060405250919050565b600067ffffffffffffffff821115614d0357600080fd5b601f19601f8301169050602081019050919050565b600067ffffffffffffffff821115614d2f57600080fd5b601f19601f8301169050602081019050919050565b6000819050602082019050919050565b60008190508160005260206000209050919050565b600081519050919050565b600081519050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600082825260208201905092915050565b6000614dd582614e26565b9050919050565b6000614de782614e26565b9050919050565b60008115159050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000614e5b82614e74565b9050919050565b6000614e6d82614e46565b9050919050565b6000614e7f82614e86565b9050919050565b6000614e9182614e26565b9050919050565b82818337600083830152505050565b60005b83811015614ec5578082015181840152602081019050614eaa565b83811115614ed4576000848401525b50505050565b6000614ee582614eec565b9050919050565b6000614ef782614f19565b9050919050565b6000819050919050565b6000601f19601f8301169050919050565b60008160601b9050919050565b614f2f81614dca565b8114614f3a57600080fd5b50565b614f4681614dee565b8114614f5157600080fd5b50565b614f5d81614dfa565b8114614f6857600080fd5b50565b614f7481614e46565b8114614f7f57600080fd5b5056fea26469706673582212202f3a7df96364d615b414f58d74634b36d525f741e071f9341ef1872039344a5464736f6c63430006000033",
  "sourceMap": "114:765:7:-:0;;;330:1:2;320:11;;358:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;447:1;430:18;;354:6:1;335:25;;720:40:5;387:10;739:20;;720:18;;;:40;;:::i;:::-;2216::6;2090:10;2235:20;;2216:18;;;:40;;:::i;:::-;694:17:12;714:12;:10;;;:12;;:::i;:::-;694:32;;745:9;736:6;;:18;;;;;;;;;;;;;;;;;;802:9;769:43;;798:1;769:43;;;;;;;;;;;;660:159;114:765:7;;1453:198:5;1551:10;1536:25;;:11;:25;;;;;1528:66;;;;;;;;;;;;;;;;;;;;;;1640:4;1604:20;:33;1625:11;1604:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;1453:198;:::o;790:104:3:-;843:15;877:10;870:17;;790:104;:::o;114:765:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;6:328:-1:-;;166:67;230:2;225:3;166:67;;;159:74;;266:30;262:1;257:3;253:11;246:51;325:2;320:3;316:12;309:19;;152:182;;;;342:407;;533:2;522:9;518:18;510:26;;583:9;577:4;573:20;569:1;558:9;554:17;547:47;608:131;734:4;608:131;;;600:139;;504:245;;;;757:163;;872:6;867:3;860:19;909:4;904:3;900:14;885:29;;853:67;;;;;114:765:7;;;;;;;",
  "deployedSourceMap": "114:765:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;917:142:5;;8:9:-1;5:2;;;30:1;27;20:12;5:2;917:142:5;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;4264:209:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4264:209:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;3555:424;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3555:424:6;;;;;;;;;;;;;;;;:::i;:::-;;3187:76:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3187:76:2;;;;;;;;;;;;;;;;:::i;:::-;;5937:296:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5937:296:6;;;;;;;;;;;;;;;;:::i;:::-;;1296:244:1;;;;;;;;;;;;;;;;:::i;:::-;;6882:141:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;6882:141:6;;;;;;;;;;;;;;;;:::i;:::-;;223:33:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;223:33:7;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;154:25:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;154:25:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2364:600:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2364:600:2;;;;;;;;;;;;;;;;:::i;:::-;;2902:232:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2902:232:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1244:506:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1244:506:2;;;;;;;;;;;;;;;;:::i;:::-;;2467:216:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2467:216:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1688:137:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1688:137:12;;;:::i;:::-;;3453:79:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3453:79:2;;;:::i;:::-;;;;;;;;;;;;;;;;333:23;;8:9:-1;5:2;;;30:1;27;20:12;5:2;333:23:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;895:77:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;895:77:12;;;:::i;:::-;;;;;;;;;;;;;;;;1246:100;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1246:100:12;;;:::i;:::-;;;;;;;;;;;;;;;;295:23:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;295:23:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;123:29:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;123:29:1;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;791:503;;8:9:-1;5:2;;;30:1;27;20:12;5:2;791:503:1;;;;;;;;;;;;;;;;:::i;:::-;;4766:258:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4766:258:6;;;;;;;;;;;;;;;;:::i;:::-;;7746:278;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7746:278:6;;;;;;;;;;;;;;;;:::i;:::-;;358:70:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;358:70:2;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2172:335:1;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2172:335:1;;;;;;;;;;;;;;;;:::i;:::-;;263:614:7;;8:9:-1;5:2;;;30:1;27;20:12;5:2;263:614:7;;;;;;;;;;;;;;;;:::i;:::-;;5346:154:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5346:154:6;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1752:417:2;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1752:417:2;;;;;;;;;;;;;;;;:::i;:::-;;1542:215:1;;;;;;;;;;;;;;;;:::i;:::-;;1974:107:12;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1974:107:12;;;;;;;;;;;;;;;;:::i;:::-;;917:142:5;996:4;1019:20;:33;1040:11;1019:33;;;;;;;;;;;;;;;;;;;;;;;;;;;1012:40;;917:142;;;:::o;4264:209:6:-;4332:7;4359:16;4367:7;4359;:16::i;:::-;4351:73;;;;;;;;;;;;;;;;;;;;;;4442:15;:24;4458:7;4442:24;;;;;;;;;;;;;;;;;;;;;4435:31;;4264:209;;;:::o;3555:424::-;3627:13;3643:16;3651:7;3643;:16::i;:::-;3627:32;;3683:5;3677:11;;:2;:11;;;;3669:57;;;;;;;;;;;;;;;;;;;;;;3761:5;3745:21;;:12;:10;:12::i;:::-;:21;;;:62;;;;3770:37;3787:5;3794:12;:10;:12::i;:::-;3770:16;:37::i;:::-;3745:62;3737:152;;;;;;;;;;;;;;;;;;;;;;3927:2;3900:15;:24;3916:7;3900:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;3964:7;3960:2;3944:28;;3953:5;3944:28;;;;;;;;;;;;3555:424;;;:::o;3187:76:2:-;3241:6;3253;3241:19;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;3241:19:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3187:76;:::o;5937:296:6:-;6088:41;6107:12;:10;:12::i;:::-;6121:7;6088:18;:41::i;:::-;6080:103;;;;;;;;;;;;;;;;;;;;;;6194:32;6208:4;6214:2;6218:7;6194:13;:32::i;:::-;5937:296;;;:::o;1296:244:1:-;1377:9;2095:23;2108:9;2095:12;:23::i;:::-;2087:73;;;;;;;;;;;;;;;;;;;;;;1394:16:::1;;:::i;:::-;1413:33;;;;;;;;1421:9;1413:33;;;;1432:6;1413:33;;;;1440:5;1413:33;;;;::::0;1394:52:::1;;1452:8;1466:1;1452:16;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1452:16:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1474:7;1484:8;:15;;;;1474:25;;1526:10;1505:14;:18;1520:2;1505:18;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;2166:1;;1296:244:::0;;;:::o;6882:141:6:-;6977:39;6994:4;7000:2;7004:7;6977:39;;;;;;;;;;;;:16;:39::i;:::-;6882:141;;;:::o;223:33:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;154:25:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2364:600:2:-;2439:10;3044:1;3018:7;3026:9;3018:18;;;;;;;;;;;;;;;;;;:22;;;:27;;3010:66;;;;;;;;;;;;;;;;;;;;;;3122:1;3090:7;3098:9;3090:18;;;;;;;;;;;;;;;;;;:28;;;:33;;3082:93;;;;;;;;;;;;;;;;;;;;;;2464:10:::1;3044:1;3018:7;3026:9;3018:18;;;;;;;;;;;;;;;;;;:22;;;:27;;3010:66;;;;;;;;;;;;;;;;;;;;;;3122:1;3090:7;3098:9;3090:18;;;;;;;;;;;;;;;;;;:28;;;:33;;3082:93;;;;;;;;;;;;;;;;;;;;;;2484:10:::2;3411:13;:24;3425:9;3411:24;;;;;;;;;;;;;;;;;;;;;3397:38;;:10;:38;;;3389:50;;;;;;;;;;;;;;;;;;;;;;2504:10:::3;3411:13;:24;3425:9;3411:24;;;;;;;;;;;;;;;;;;;;;3397:38;;:10;:38;;;3389:50;;;;;;;;;;;;;;;;;;;;;;2521:9:::4;2533:10;2541:1;2533:7;:10::i;:::-;2521:22;;2549:20;2587:1;2579:4;:9;2575:126;;;2608:7;2616:10;2608:19;;;;;;;;;;;;;;;;;;:25;;2599:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2575:126;;;2669:7;2677:10;2669:19;;;;;;;;;;;;;;;;;;:25;;2660:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2575:126;2711:35;2723:10;2735;2711:35;;;;;;;;;;;;;;;;2752:113;2766:13;:25;2780:10;2766:25;;;;;;;;;;;;;;;;;;;;;2793:7;2801:10;2793:19;;;;;;;;;;;;;;;;;;:27;;2752:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2821:9;2832:7;2840:10;2832:19;;;;;;;;;;;;;;;;;;:24;;2752:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2858:6;2752:13;:113::i;:::-;2903:9;2871:7;2879:10;2871:19;;;;;;;;;;;;;;;;;;:29;;:41;;;;2950:9;2918:7;2926:10;2918:19;;;;;;;;;;;;;;;;;;:29;;:41;;;;3445:1;;::::3;3181::::2;::::1;2364:600:::0;;;:::o;2902:232:6:-;2966:7;2985:13;3001:11;:20;3013:7;3001:20;;;;;;;;;;;;;;;;;;;;;2985:36;;3056:1;3039:19;;:5;:19;;;;3031:73;;;;;;;;;;;;;;;;;;;;;;3122:5;3115:12;;;2902:232;;;:::o;1244:506:2:-;1396:6;1382:20;;:10;:20;;;1374:66;;;;;;;;;;;;;;;;;;;;;;1446:23;;:::i;:::-;1472:54;;;;;;;;1479:8;1472:54;;;;1489:5;1472:54;;;;1496:4;1472:54;;;;1502:9;1472:54;;;;1513:6;1472:54;;;;1521:1;1472:54;;;;1524:1;1472:54;;;1446:80;;1563:35;1596:1;1563:16;:28;1580:10;1563:28;;;;;;;;;;;;;;;;:32;;:35;;;;:::i;:::-;1532:16;:28;1549:10;1532:28;;;;;;;;;;;;;;;:66;;;;1604:7;1617:9;1604:23;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;1604:23:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;1638:9;1645:1;1638:2;;:6;;:9;;;;:::i;:::-;1633:2;:14;;;;1673:10;1653:13;:17;1667:2;;1653:17;;;;;;;;;;;;:30;;;;;;;;;;;;;;;;;;1694:53;1704:2;;1708:8;1718:5;1725:4;1731:1;1734:6;1742:1;1745;1694:53;;;;;;;;;;;;;;;;;;;;;;1244:506;;;;;;:::o;2467:216:6:-;2531:7;2575:1;2558:19;;:5;:19;;;;2550:74;;;;;;;;;;;;;;;;;;;;;;2642:34;:17;:24;2660:5;2642:24;;;;;;;;;;;;;;;:32;:34::i;:::-;2635:41;;2467:216;;;:::o;1688:137:12:-;1099:9;:7;:9::i;:::-;1091:54;;;;;;;;;;;;;;;;;;;;;;1786:1:::1;1749:40;;1770:6;;;;;;;;;;;1749:40;;;;;;;;;;;;1816:1;1799:6;;:19;;;;;;;;;;;;;;;;;;1688:137::o:0;3453:79:2:-;3493:16;3523:6;3516:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3453:79;:::o;333:23::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;895:77:12:-;933:7;959:6;;;;;;;;;;;952:13;;895:77;:::o;1246:100::-;1294:4;1333:6;;;;;;;;;;;1317:22;;:12;:10;:12::i;:::-;:22;;;1310:29;;1246:100;:::o;295:23:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;123:29:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;791:503::-;846:9;3411:13:2;:24;3425:9;3411:24;;;;;;;;;;;;;;;;;;;;;3397:38;;:10;:38;;;3389:50;;;;;;;;;;;;;;;;;;;;;;863:20:1::1;;:::i;:::-;886:47;;;;;;;;896:7;904:9;896:18;;;;;;;;;;;;;;;;;;886:47;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;916:9;886:47;;;;927:5;886:47;;;;::::0;863:70:::1;;939:10;955:3;939:20;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;939:20:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;965:7;975:10;:17;;;;965:27;;1026:9;998:21;:25;1020:2;998:25;;;;;;;;;;;:37;;;;1047:244;1059:13;:24;1073:9;1059:24;;;;;;;;;;;;;;;;;;;;;1085:9;1096:7;1104:9;1096:18;;;;;;;;;;;;;;;;;;:26;;1124:7;1132:9;1124:18;;;;;;;;;;;;;;;;;;:23;;1153:7;1161:9;1153:18;;;;;;;;;;;;;;;;;;:22;;;1177:7;1185:9;1177:18;;;;;;;;;;;;;;;;;;:28;;;1207:7;1215:9;1207:18;;;;;;;;;;;;;;;;;;:24;;1233:7;1241:9;1233:18;;;;;;;;;;;;;;;;;;:27;;;1262:7;1270:9;1262:18;;;;;;;;;;;;;;;;;;:28;;;1047:244;;;;;;;;;;;;;;;;;;;;;;;3445:1:2;;791:503:1::0;;:::o;4766:258:6:-;4860:12;:10;:12::i;:::-;4854:18;;:2;:18;;;;4846:56;;;;;;;;;;;;;;;;;;;;;;4952:8;4913:18;:32;4932:12;:10;:12::i;:::-;4913:32;;;;;;;;;;;;;;;:36;4946:2;4913:36;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;5004:2;4975:42;;4990:12;:10;:12::i;:::-;4975:42;;;5008:8;4975:42;;;;;;;;;;;;;;;4766:258;;:::o;7746:278::-;7869:41;7888:12;:10;:12::i;:::-;7902:7;7869:18;:41::i;:::-;7861:103;;;;;;;;;;;;;;;;;;;;;;7974:43;7992:4;7998:2;8002:7;8011:5;7974:17;:43::i;:::-;7746:278;;;;:::o;358:70:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2172:335:1:-;2254:10;2566:8;2575:10;2566:20;;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;2558:85;;;;;;;;;;;;;;;;;;;;;;2273:94:::1;2287:16;:30;2304:12;2287:30;;;;;;;;;;;;;;;;;;;;;2319:10;2331:21;:35;2353:12;2331:35;;;;;;;;;;;;2273:13;:94::i;:::-;2378:126;2396:16;:30;2413:12;2396:30;;;;;;;;;;;;;;;;;;;;;2428:10;2440:21;:35;2462:12;2440:35;;;;;;;;;;;;2477:8;2486:10;2477:20;;;;;;;;;;;;;;;;;;:26;;;2378:126;;;;;;;;;;;;;;;;;;2172:335:::0;;;:::o;263:614:7:-;337:15;3411:13:2;:24;3425:9;3411:24;;;;;;;;;;;;;;;;;;;;;3397:38;;:10;:38;;;3389:50;;;;;;;;;;;;;;;;;;;;;;418:6:7::1;372:12;385:15;372:29;;;;;;;;;;;;;;;;;;:42;;;:52;;364:106;;;;;;;;;;;;;;;;;;;;;;480:9;492:10;500:1;492:7;:10::i;:::-;480:22;;523:1;515:4;:9;512:359;;;539:63;600:1;539:7;547:12;560:15;547:29;;;;;;;;;;;;;;;;;;:38;;;539:47;;;;;;;;;;;;;;;;;;:56;;;:60;;:63;;;;:::i;:::-;;616:64;678:1;616:7;624:12;637:15;624:29;;;;;;;;;;;;;;;;;;:38;;;616:47;;;;;;;;;;;;;;;;;;:57;;;:61;;:64;;;;:::i;:::-;;512:359;;;719:63;780:1;719:7;727:12;740:15;727:29;;;;;;;;;;;;;;;;;;:38;;;719:47;;;;;;;;;;;;;;;;;;:56;;;:60;;:63;;;;:::i;:::-;;796:64;858:1;796:7;804:12;817:15;804:29;;;;;;;;;;;;;;;;;;:38;;;796:47;;;;;;;;;;;;;;;;;;:57;;;:61;;:64;;;;:::i;:::-;;512:359;3445:1:2;263:614:7::0;;;:::o;5346:154:6:-;5435:4;5458:18;:25;5477:5;5458:25;;;;;;;;;;;;;;;:35;5484:8;5458:35;;;;;;;;;;;;;;;;;;;;;;;;;5451:42;;5346:154;;;;:::o;1752:417:2:-;1801:14;1818:13;:24;1832:9;1818:24;;;;;;;;;;;;;;;;;;;;;1801:41;;1875:31;1904:1;1875:16;:24;1892:6;1875:24;;;;;;;;;;;;;;;;:28;;:31;;;;:::i;:::-;1848:16;:24;1865:6;1848:24;;;;;;;;;;;;;;;:58;;;;1919:7;1927:9;1919:18;;;;;;;;;;;;;;;;;;;1912:26;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;1949:217;1960:9;1971:7;1979:9;1971:18;;;;;;;;;;;;;;;;;;:26;;1999:7;2007:9;1999:18;;;;;;;;;;;;;;;;;;:23;;2024:7;2032:9;2024:18;;;;;;;;;;;;;;;;;;:22;;;2052:7;2060:9;2052:18;;;;;;;;;;;;;;;;;;:28;;;2082:7;2090:9;2082:18;;;;;;;;;;;;;;;;;;:24;;2108:7;2116:9;2108:18;;;;;;;;;;;;;;;;;;:27;;;2137:7;2145:9;2137:18;;;;;;;;;;;;;;;;;;:28;;;1949:217;;;;;;;;;;;;;;;;;;;;;;1752:417;;:::o;1542:215:1:-;1625:10;2740;2710:40;;:14;:26;2725:10;2710:26;;;;;;;;;;;;;;;;;;;;;:40;;;2702:109;;;;;;;;;;;;;;;;;;;;;;1672:6:::1;1643:8;1652:10;1643:20;;;;;;;;;;;;;;;;;;:26;;:35;;;;1689:65;1704:10;1716:8;1725:10;1716:20;;;;;;;;;;;;;;;;;;:29;;;1747:6;1689:65;;;;;;;;;;;;;;;;;1542:215:::0;;;:::o;1974:107:12:-;1099:9;:7;:9::i;:::-;1091:54;;;;;;;;;;;;;;;;;;;;;;2046:28:::1;2065:8;2046:18;:28::i;:::-;1974:107:::0;:::o;9195:152:6:-;9252:4;9268:13;9284:11;:20;9296:7;9284:20;;;;;;;;;;;;;;;;;;;;;9268:36;;9338:1;9321:19;;:5;:19;;;;9314:26;;;9195:152;;;:::o;790:104:3:-;843:15;877:10;870:17;;790:104;:::o;9708:329:6:-;9793:4;9817:16;9825:7;9817;:16::i;:::-;9809:73;;;;;;;;;;;;;;;;;;;;;;9892:13;9908:16;9916:7;9908;:16::i;:::-;9892:32;;9953:5;9942:16;;:7;:16;;;:51;;;;9986:7;9962:31;;:20;9974:7;9962:11;:20::i;:::-;:31;;;9942:51;:87;;;;9997:32;10014:5;10021:7;9997:16;:32::i;:::-;9942:87;9934:96;;;9708:329;;;;:::o;13320:447::-;13433:4;13413:24;;:16;13421:7;13413;:16::i;:::-;:24;;;13405:78;;;;;;;;;;;;;;;;;;;;;;13515:1;13501:16;;:2;:16;;;;13493:65;;;;;;;;;;;;;;;;;;;;;;13569:23;13584:7;13569:14;:23::i;:::-;13603:35;:17;:23;13621:4;13603:23;;;;;;;;;;;;;;;:33;:35::i;:::-;13648:33;:17;:21;13666:2;13648:21;;;;;;;;;;;;;;;:31;:33::i;:::-;13715:2;13692:11;:20;13704:7;13692:20;;;;;;;;;;;;:25;;;;;;;;;;;;;;;;;;13752:7;13748:2;13733:27;;13742:4;13733:27;;;;;;;;;;;;13320:447;;;:::o;1759:282:1:-;1819:4;1831:10;1844:4;1831:17;;1858:6;1867:1;1858:10;;1854:167;1874:8;:15;;;;1870:1;:19;1854:167;;;1929:10;1908:31;;:14;:17;1923:1;1908:17;;;;;;;;;;;;;;;;;;;;;:31;;;:68;;;;;1967:9;1943:8;1952:1;1943:11;;;;;;;;;;;;;;;;;;:20;;;:33;1908:68;1905:110;;;1999:5;1991:13;;1905:110;1891:3;;;;;;;1854:167;;;;2033:5;2026:12;;;1759:282;;;:::o;2171:191:2:-;2220:4;2244:16;2258:1;2244:9;;:13;;:16;;;;:::i;:::-;2232:9;:28;;;;2349:8;2305:15;2322:10;2334:9;;2288:56;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2288:56:2;;;2278:67;;;;;;2273:73;;:84;;;;;;2266:91;;2171:191;;;:::o;836:176:13:-;894:7;913:9;929:1;925;:5;913:17;;953:1;948;:6;;940:46;;;;;;;;;;;;;;;;;;;;;;1004:1;997:8;;;836:176;;;;:::o;1061:112:4:-;1126:7;1152;:14;;;1145:21;;1061:112;;;:::o;8729:271:6:-;8838:32;8852:4;8858:2;8862:7;8838:13;:32::i;:::-;8729:271;;;;:::o;1276:134:13:-;1334:7;1360:43;1364:1;1367;1360:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1353:50;;1276:134;;;;:::o;2182:225:12:-;2275:1;2255:22;;:8;:22;;;;2247:73;;;;;;;;;;;;;;;;;;;;;;2364:8;2335:38;;2356:6;;;;;;;;;;;2335:38;;;;;;;;;;;;2392:8;2383:6;;:17;;;;;;;;;;;;;;;;;;2182:225;:::o;15566:171:6:-;15665:1;15629:38;;:15;:24;15645:7;15629:24;;;;;;;;;;;;;;;;;;;;;:38;;;15625:106;;15718:1;15683:15;:24;15699:7;15683:24;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;15625:106;15566:171;:::o;1363:108:4:-;1443:21;1462:1;1443:7;:14;;;:18;;:21;;;;:::i;:::-;1426:7;:14;;:38;;;;1363:108;:::o;1179:178::-;1349:1;1331:7;:14;;;:19;;;;;;;;;;;1179:178;:::o;1734:187:13:-;1820:7;1852:1;1847;:6;;1855:12;1839:29;;;;;;;;;;;;;;;;;;;;;;;;;1878:9;1894:1;1890;:5;1878:17;;1913:1;1906:8;;;1734:187;;;;;:::o;114:765:7:-;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5:130:-1:-;;85:6;72:20;63:29;;97:33;124:5;97:33;;;57:78;;;;;142:124;;219:6;206:20;197:29;;231:30;255:5;231:30;;;191:75;;;;;273:128;;352:6;339:20;330:29;;364:32;390:5;364:32;;;324:77;;;;;409:440;;510:3;503:4;495:6;491:17;487:27;477:2;;528:1;525;518:12;477:2;565:6;552:20;587:64;602:48;643:6;602:48;;;587:64;;;578:73;;671:6;664:5;657:21;707:4;699:6;695:17;740:4;733:5;729:16;775:3;766:6;761:3;757:16;754:25;751:2;;;792:1;789;782:12;751:2;802:41;836:6;831:3;826;802:41;;;470:379;;;;;;;;858:442;;960:3;953:4;945:6;941:17;937:27;927:2;;978:1;975;968:12;927:2;1015:6;1002:20;1037:65;1052:49;1094:6;1052:49;;;1037:65;;;1028:74;;1122:6;1115:5;1108:21;1158:4;1150:6;1146:17;1191:4;1184:5;1180:16;1226:3;1217:6;1212:3;1208:16;1205:25;1202:2;;;1243:1;1240;1233:12;1202:2;1253:41;1287:6;1282:3;1277;1253:41;;;920:380;;;;;;;;1308:130;;1388:6;1375:20;1366:29;;1400:33;1427:5;1400:33;;;1360:78;;;;;1445:241;;1549:2;1537:9;1528:7;1524:23;1520:32;1517:2;;;1565:1;1562;1555:12;1517:2;1600:1;1617:53;1662:7;1653:6;1642:9;1638:22;1617:53;;;1607:63;;1579:97;1511:175;;;;;1693:366;;;1814:2;1802:9;1793:7;1789:23;1785:32;1782:2;;;1830:1;1827;1820:12;1782:2;1865:1;1882:53;1927:7;1918:6;1907:9;1903:22;1882:53;;;1872:63;;1844:97;1972:2;1990:53;2035:7;2026:6;2015:9;2011:22;1990:53;;;1980:63;;1951:98;1776:283;;;;;;2066:491;;;;2204:2;2192:9;2183:7;2179:23;2175:32;2172:2;;;2220:1;2217;2210:12;2172:2;2255:1;2272:53;2317:7;2308:6;2297:9;2293:22;2272:53;;;2262:63;;2234:97;2362:2;2380:53;2425:7;2416:6;2405:9;2401:22;2380:53;;;2370:63;;2341:98;2470:2;2488:53;2533:7;2524:6;2513:9;2509:22;2488:53;;;2478:63;;2449:98;2166:391;;;;;;2564:721;;;;;2728:3;2716:9;2707:7;2703:23;2699:33;2696:2;;;2745:1;2742;2735:12;2696:2;2780:1;2797:53;2842:7;2833:6;2822:9;2818:22;2797:53;;;2787:63;;2759:97;2887:2;2905:53;2950:7;2941:6;2930:9;2926:22;2905:53;;;2895:63;;2866:98;2995:2;3013:53;3058:7;3049:6;3038:9;3034:22;3013:53;;;3003:63;;2974:98;3131:2;3120:9;3116:18;3103:32;3155:18;3147:6;3144:30;3141:2;;;3187:1;3184;3177:12;3141:2;3207:62;3261:7;3252:6;3241:9;3237:22;3207:62;;;3197:72;;3082:193;2690:595;;;;;;;;3292:360;;;3410:2;3398:9;3389:7;3385:23;3381:32;3378:2;;;3426:1;3423;3416:12;3378:2;3461:1;3478:53;3523:7;3514:6;3503:9;3499:22;3478:53;;;3468:63;;3440:97;3568:2;3586:50;3628:7;3619:6;3608:9;3604:22;3586:50;;;3576:60;;3547:95;3372:280;;;;;;3659:1061;;;;;;3861:3;3849:9;3840:7;3836:23;3832:33;3829:2;;;3878:1;3875;3868:12;3829:2;3913:1;3930:53;3975:7;3966:6;3955:9;3951:22;3930:53;;;3920:63;;3892:97;4048:2;4037:9;4033:18;4020:32;4072:18;4064:6;4061:30;4058:2;;;4104:1;4101;4094:12;4058:2;4124:63;4179:7;4170:6;4159:9;4155:22;4124:63;;;4114:73;;3999:194;4224:2;4242:53;4287:7;4278:6;4267:9;4263:22;4242:53;;;4232:63;;4203:98;4360:2;4349:9;4345:18;4332:32;4384:18;4376:6;4373:30;4370:2;;;4416:1;4413;4406:12;4370:2;4436:63;4491:7;4482:6;4471:9;4467:22;4436:63;;;4426:73;;4311:194;4564:3;4553:9;4549:19;4536:33;4589:18;4581:6;4578:30;4575:2;;;4621:1;4618;4611:12;4575:2;4641:63;4696:7;4687:6;4676:9;4672:22;4641:63;;;4631:73;;4515:195;3823:897;;;;;;;;;4727:366;;;4848:2;4836:9;4827:7;4823:23;4819:32;4816:2;;;4864:1;4861;4854:12;4816:2;4899:1;4916:53;4961:7;4952:6;4941:9;4937:22;4916:53;;;4906:63;;4878:97;5006:2;5024:53;5069:7;5060:6;5049:9;5045:22;5024:53;;;5014:63;;4985:98;4810:283;;;;;;5100:239;;5203:2;5191:9;5182:7;5178:23;5174:32;5171:2;;;5219:1;5216;5209:12;5171:2;5254:1;5271:52;5315:7;5306:6;5295:9;5291:22;5271:52;;;5261:62;;5233:96;5165:174;;;;;5346:241;;5450:2;5438:9;5429:7;5425:23;5421:32;5418:2;;;5466:1;5463;5456:12;5418:2;5501:1;5518:53;5563:7;5554:6;5543:9;5539:22;5518:53;;;5508:63;;5480:97;5412:175;;;;;5594:366;;;5715:2;5703:9;5694:7;5690:23;5686:32;5683:2;;;5731:1;5728;5721:12;5683:2;5766:1;5783:53;5828:7;5819:6;5808:9;5804:22;5783:53;;;5773:63;;5745:97;5873:2;5891:53;5936:7;5927:6;5916:9;5912:22;5891:53;;;5881:63;;5852:98;5677:283;;;;;;5968:173;;6055:46;6097:3;6089:6;6055:46;;;6130:4;6125:3;6121:14;6107:28;;6048:93;;;;;6149:142;6240:45;6279:5;6240:45;;;6235:3;6228:58;6222:69;;;6298:184;6415:61;6443:32;6469:5;6443:32;;;6415:61;;;6410:3;6403:74;6397:85;;;6489:103;6562:24;6580:5;6562:24;;;6557:3;6550:37;6544:48;;;6599:113;6682:24;6700:5;6682:24;;;6677:3;6670:37;6664:48;;;6750:690;;6895:54;6943:5;6895:54;;;6962:86;7041:6;7036:3;6962:86;;;6955:93;;7069:56;7119:5;7069:56;;;7145:7;7173:1;7158:260;7183:6;7180:1;7177:13;7158:260;;;7250:6;7244:13;7271:63;7330:3;7315:13;7271:63;;;7264:70;;7351:60;7404:6;7351:60;;;7341:70;;7215:203;7205:1;7202;7198:9;7193:14;;7158:260;;;7162:14;7431:3;7424:10;;6874:566;;;;;;;;7448:104;7525:21;7540:5;7525:21;;;7520:3;7513:34;7507:45;;;7559:142;7650:45;7689:5;7650:45;;;7645:3;7638:58;7632:69;;;7708:347;;7820:39;7853:5;7820:39;;;7871:71;7935:6;7930:3;7871:71;;;7864:78;;7947:52;7992:6;7987:3;7980:4;7973:5;7969:16;7947:52;;;8020:29;8042:6;8020:29;;;8015:3;8011:39;8004:46;;7800:255;;;;;;8062:319;;8160:35;8189:5;8160:35;;;8207:61;8261:6;8256:3;8207:61;;;8200:68;;8273:52;8318:6;8313:3;8306:4;8299:5;8295:16;8273:52;;;8346:29;8368:6;8346:29;;;8341:3;8337:39;8330:46;;8140:241;;;;;;8388:339;;8496:35;8525:5;8496:35;;;8543:71;8607:6;8602:3;8543:71;;;8536:78;;8619:52;8664:6;8659:3;8652:4;8645:5;8641:16;8619:52;;;8692:29;8714:6;8692:29;;;8687:3;8683:39;8676:46;;8476:251;;;;;;8759:823;;8878:5;8872:12;8912:1;8901:9;8897:17;8925:1;8920:248;;;;9179:1;9174:402;;;;8890:686;;8920:248;8998:4;8994:1;8983:9;8979:17;8975:28;9017:71;9081:6;9076:3;9017:71;;;9010:78;;9126:4;9122:9;9111;9107:25;9102:3;9095:38;9156:4;9151:3;9147:14;9140:21;;8927:241;8920:248;;9174:402;9243:1;9232:9;9228:17;9259:71;9323:6;9318:3;9259:71;;;9252:78;;9352:38;9384:5;9352:38;;;9406:1;9414:130;9428:6;9425:1;9422:13;9414:130;;;9493:7;9487:14;9483:1;9478:3;9474:11;9467:35;9534:1;9525:7;9521:15;9510:26;;9450:4;9447:1;9443:12;9438:17;;9414:130;;;9567:1;9562:3;9558:11;9551:18;;9181:395;;;8890:686;;8848:734;;;;;;9591:384;;9751:67;9815:2;9810:3;9751:67;;;9744:74;;9851:34;9847:1;9842:3;9838:11;9831:55;9920:17;9915:2;9910:3;9906:12;9899:39;9966:2;9961:3;9957:12;9950:19;;9737:238;;;;9984:375;;10144:67;10208:2;10203:3;10144:67;;;10137:74;;10244:34;10240:1;10235:3;10231:11;10224:55;10313:8;10308:2;10303:3;10299:12;10292:30;10350:2;10345:3;10341:12;10334:19;;10130:229;;;;10368:393;;10528:67;10592:2;10587:3;10528:67;;;10521:74;;10628:34;10624:1;10619:3;10615:11;10608:55;10697:26;10692:2;10687:3;10683:12;10676:48;10752:2;10747:3;10743:12;10736:19;;10514:247;;;;10770:327;;10930:67;10994:2;10989:3;10930:67;;;10923:74;;11030:29;11026:1;11021:3;11017:11;11010:50;11088:2;11083:3;11079:12;11072:19;;10916:181;;;;11106:373;;11266:67;11330:2;11325:3;11266:67;;;11259:74;;11366:34;11362:1;11357:3;11353:11;11346:55;11435:6;11430:2;11425:3;11421:12;11414:28;11470:2;11465:3;11461:12;11454:19;;11252:227;;;;11488:325;;11648:67;11712:2;11707:3;11648:67;;;11641:74;;11748:27;11744:1;11739:3;11735:11;11728:48;11804:2;11799:3;11795:12;11788:19;;11634:179;;;;11822:381;;11982:67;12046:2;12041:3;11982:67;;;11975:74;;12082:34;12078:1;12073:3;12069:11;12062:55;12151:14;12146:2;12141:3;12137:12;12130:36;12194:2;12189:3;12185:12;12178:19;;11968:235;;;;12212:381;;12372:67;12436:2;12431:3;12372:67;;;12365:74;;12472:34;12468:1;12463:3;12459:11;12452:55;12541:14;12536:2;12531:3;12527:12;12520:36;12584:2;12579:3;12575:12;12568:19;;12358:235;;;;12602:378;;12762:67;12826:2;12821:3;12762:67;;;12755:74;;12862:34;12858:1;12853:3;12849:11;12842:55;12931:11;12926:2;12921:3;12917:12;12910:33;12971:2;12966:3;12962:12;12955:19;;12748:232;;;;12989:393;;13149:67;13213:2;13208:3;13149:67;;;13142:74;;13249:34;13245:1;13240:3;13236:11;13229:55;13318:26;13313:2;13308:3;13304:12;13297:48;13373:2;13368:3;13364:12;13357:19;;13135:247;;;;13391:379;;13551:67;13615:2;13610:3;13551:67;;;13544:74;;13651:34;13647:1;13642:3;13638:11;13631:55;13720:12;13715:2;13710:3;13706:12;13699:34;13761:2;13756:3;13752:12;13745:19;;13537:233;;;;13779:378;;13939:67;14003:2;13998:3;13939:67;;;13932:74;;14039:34;14035:1;14030:3;14026:11;14019:55;14108:11;14103:2;14098:3;14094:12;14087:33;14148:2;14143:3;14139:12;14132:19;;13925:232;;;;14166:326;;14326:67;14390:2;14385:3;14326:67;;;14319:74;;14426:28;14422:1;14417:3;14413:11;14406:49;14483:2;14478:3;14474:12;14467:19;;14312:180;;;;14501:381;;14661:67;14725:2;14720:3;14661:67;;;14654:74;;14761:34;14757:1;14752:3;14748:11;14741:55;14830:14;14825:2;14820:3;14816:12;14809:36;14873:2;14868:3;14864:12;14857:19;;14647:235;;;;14891:332;;15051:67;15115:2;15110:3;15051:67;;;15044:74;;15151:34;15147:1;15142:3;15138:11;15131:55;15214:2;15209:3;15205:12;15198:19;;15037:186;;;;15232:370;;15392:67;15456:2;15451:3;15392:67;;;15385:74;;15492:34;15488:1;15483:3;15479:11;15472:55;15561:3;15556:2;15551:3;15547:12;15540:25;15593:2;15588:3;15584:12;15577:19;;15378:224;;;;15611:378;;15771:67;15835:2;15830:3;15771:67;;;15764:74;;15871:34;15867:1;15862:3;15858:11;15851:55;15940:11;15935:2;15930:3;15926:12;15919:33;15980:2;15975:3;15971:12;15964:19;;15757:232;;;;15998:370;;16158:67;16222:2;16217:3;16158:67;;;16151:74;;16258:34;16254:1;16249:3;16245:11;16238:55;16327:3;16322:2;16317:3;16313:12;16306:25;16359:2;16354:3;16350:12;16343:19;;16144:224;;;;16377:375;;16537:67;16601:2;16596:3;16537:67;;;16530:74;;16637:34;16633:1;16628:3;16624:11;16617:55;16706:8;16701:2;16696:3;16692:12;16685:30;16743:2;16738:3;16734:12;16727:19;;16523:229;;;;16761:262;;16921:66;16985:1;16980:3;16921:66;;;16914:73;;17015:1;17010:3;17006:11;16999:18;;16907:116;;;;17032:386;;17192:67;17256:2;17251:3;17192:67;;;17185:74;;17292:34;17288:1;17283:3;17279:11;17272:55;17361:19;17356:2;17351:3;17347:12;17340:41;17409:2;17404:3;17400:12;17393:19;;17178:240;;;;17481:1490;;17624:4;17619:3;17615:14;17710:4;17703:5;17699:16;17693:23;17762:3;17756:4;17752:14;17745:4;17740:3;17736:14;17729:38;17782:69;17846:4;17832:12;17782:69;;;17774:77;;17644:219;17936:4;17929:5;17925:16;17919:23;17988:3;17982:4;17978:14;17971:4;17966:3;17962:14;17955:38;18008:69;18072:4;18058:12;18008:69;;;18000:77;;17873:216;18161:4;18154:5;18150:16;18144:23;18173:63;18230:4;18225:3;18221:14;18207:12;18173:63;;;18099:143;18320:4;18313:5;18309:16;18303:23;18332:63;18389:4;18384:3;18380:14;18366:12;18332:63;;;18252:149;18475:4;18468:5;18464:16;18458:23;18527:3;18521:4;18517:14;18510:4;18505:3;18501:14;18494:38;18547:69;18611:4;18597:12;18547:69;;;18539:77;;18411:217;18705:4;18698:5;18694:16;18688:23;18717:63;18774:4;18769:3;18765:14;18751:12;18717:63;;;18638:148;18864:4;18857:5;18853:16;18847:23;18876:63;18933:4;18928:3;18924:14;18910:12;18876:63;;;18796:149;18962:4;18955:11;;17597:1374;;;;;;18978:103;19051:24;19069:5;19051:24;;;19046:3;19039:37;19033:48;;;19088:113;19171:24;19189:5;19171:24;;;19166:3;19159:37;19153:48;;;19208:152;19309:45;19329:24;19347:5;19329:24;;;19309:45;;;19304:3;19297:58;19291:69;;;19367:554;;19558:75;19629:3;19620:6;19558:75;;;19655:2;19650:3;19646:12;19639:19;;19669:91;19756:3;19747:6;19669:91;;;19782:2;19777:3;19773:12;19766:19;;19796:75;19867:3;19858:6;19796:75;;;19893:2;19888:3;19884:12;19877:19;;19913:3;19906:10;;19546:375;;;;;;;19928:213;;20046:2;20035:9;20031:18;20023:26;;20060:71;20128:1;20117:9;20113:17;20104:6;20060:71;;;20017:124;;;;;20148:451;;20330:2;20319:9;20315:18;20307:26;;20344:79;20420:1;20409:9;20405:17;20396:6;20344:79;;;20434:72;20502:2;20491:9;20487:18;20478:6;20434:72;;;20517;20585:2;20574:9;20570:18;20561:6;20517:72;;;20301:298;;;;;;;20606:563;;20816:3;20805:9;20801:19;20793:27;;20831:71;20899:1;20888:9;20884:17;20875:6;20831:71;;;20913:80;20989:2;20978:9;20974:18;20965:6;20913:80;;;21004:72;21072:2;21061:9;21057:18;21048:6;21004:72;;;21087;21155:2;21144:9;21140:18;21131:6;21087:72;;;20787:382;;;;;;;;21176:1353;;21569:3;21558:9;21554:19;21546:27;;21584:71;21652:1;21641:9;21637:17;21628:6;21584:71;;;21666:72;21734:2;21723:9;21719:18;21710:6;21666:72;;;21786:9;21780:4;21776:20;21771:2;21760:9;21756:18;21749:48;21811:75;21881:4;21872:6;21811:75;;;21803:83;;21934:9;21928:4;21924:20;21919:2;21908:9;21904:18;21897:48;21959:75;22029:4;22020:6;21959:75;;;21951:83;;22045:73;22113:3;22102:9;22098:19;22089:6;22045:73;;;22129;22197:3;22186:9;22182:19;22173:6;22129:73;;;22251:9;22245:4;22241:20;22235:3;22224:9;22220:19;22213:49;22276:75;22346:4;22337:6;22276:75;;;22268:83;;22362:73;22430:3;22419:9;22415:19;22406:6;22362:73;;;22446;22514:3;22503:9;22499:19;22490:6;22446:73;;;21540:989;;;;;;;;;;;;;22536:361;;22704:2;22693:9;22689:18;22681:26;;22754:9;22748:4;22744:20;22740:1;22729:9;22725:17;22718:47;22779:108;22882:4;22873:6;22779:108;;;22771:116;;22675:222;;;;;22904:201;;23016:2;23005:9;23001:18;22993:26;;23030:65;23092:1;23081:9;23077:17;23068:6;23030:65;;;22987:118;;;;;23112:293;;23246:2;23235:9;23231:18;23223:26;;23296:9;23290:4;23286:20;23282:1;23271:9;23267:17;23260:47;23321:74;23390:4;23381:6;23321:74;;;23313:82;;23217:188;;;;;23412:301;;23550:2;23539:9;23535:18;23527:26;;23600:9;23594:4;23590:20;23586:1;23575:9;23571:17;23564:47;23625:78;23698:4;23689:6;23625:78;;;23617:86;;23521:192;;;;;23720:1123;;24054:3;24043:9;24039:19;24031:27;;24105:9;24099:4;24095:20;24091:1;24080:9;24076:17;24069:47;24130:74;24199:4;24190:6;24130:74;;;24122:82;;24252:9;24246:4;24242:20;24237:2;24226:9;24222:18;24215:48;24277:74;24346:4;24337:6;24277:74;;;24269:82;;24362:72;24430:2;24419:9;24415:18;24406:6;24362:72;;;24445;24513:2;24502:9;24498:18;24489:6;24445:72;;;24566:9;24560:4;24556:20;24550:3;24539:9;24535:19;24528:49;24591:74;24660:4;24651:6;24591:74;;;24583:82;;24676:73;24744:3;24733:9;24729:19;24720:6;24676:73;;;24760;24828:3;24817:9;24813:19;24804:6;24760:73;;;24025:818;;;;;;;;;;;24850:407;;25041:2;25030:9;25026:18;25018:26;;25091:9;25085:4;25081:20;25077:1;25066:9;25062:17;25055:47;25116:131;25242:4;25116:131;;;25108:139;;25012:245;;;;25264:407;;25455:2;25444:9;25440:18;25432:26;;25505:9;25499:4;25495:20;25491:1;25480:9;25476:17;25469:47;25530:131;25656:4;25530:131;;;25522:139;;25426:245;;;;25678:407;;25869:2;25858:9;25854:18;25846:26;;25919:9;25913:4;25909:20;25905:1;25894:9;25890:17;25883:47;25944:131;26070:4;25944:131;;;25936:139;;25840:245;;;;26092:407;;26283:2;26272:9;26268:18;26260:26;;26333:9;26327:4;26323:20;26319:1;26308:9;26304:17;26297:47;26358:131;26484:4;26358:131;;;26350:139;;26254:245;;;;26506:407;;26697:2;26686:9;26682:18;26674:26;;26747:9;26741:4;26737:20;26733:1;26722:9;26718:17;26711:47;26772:131;26898:4;26772:131;;;26764:139;;26668:245;;;;26920:407;;27111:2;27100:9;27096:18;27088:26;;27161:9;27155:4;27151:20;27147:1;27136:9;27132:17;27125:47;27186:131;27312:4;27186:131;;;27178:139;;27082:245;;;;27334:407;;27525:2;27514:9;27510:18;27502:26;;27575:9;27569:4;27565:20;27561:1;27550:9;27546:17;27539:47;27600:131;27726:4;27600:131;;;27592:139;;27496:245;;;;27748:407;;27939:2;27928:9;27924:18;27916:26;;27989:9;27983:4;27979:20;27975:1;27964:9;27960:17;27953:47;28014:131;28140:4;28014:131;;;28006:139;;27910:245;;;;28162:407;;28353:2;28342:9;28338:18;28330:26;;28403:9;28397:4;28393:20;28389:1;28378:9;28374:17;28367:47;28428:131;28554:4;28428:131;;;28420:139;;28324:245;;;;28576:407;;28767:2;28756:9;28752:18;28744:26;;28817:9;28811:4;28807:20;28803:1;28792:9;28788:17;28781:47;28842:131;28968:4;28842:131;;;28834:139;;28738:245;;;;28990:407;;29181:2;29170:9;29166:18;29158:26;;29231:9;29225:4;29221:20;29217:1;29206:9;29202:17;29195:47;29256:131;29382:4;29256:131;;;29248:139;;29152:245;;;;29404:407;;29595:2;29584:9;29580:18;29572:26;;29645:9;29639:4;29635:20;29631:1;29620:9;29616:17;29609:47;29670:131;29796:4;29670:131;;;29662:139;;29566:245;;;;29818:407;;30009:2;29998:9;29994:18;29986:26;;30059:9;30053:4;30049:20;30045:1;30034:9;30030:17;30023:47;30084:131;30210:4;30084:131;;;30076:139;;29980:245;;;;30232:407;;30423:2;30412:9;30408:18;30400:26;;30473:9;30467:4;30463:20;30459:1;30448:9;30444:17;30437:47;30498:131;30624:4;30498:131;;;30490:139;;30394:245;;;;30646:407;;30837:2;30826:9;30822:18;30814:26;;30887:9;30881:4;30877:20;30873:1;30862:9;30858:17;30851:47;30912:131;31038:4;30912:131;;;30904:139;;30808:245;;;;31060:407;;31251:2;31240:9;31236:18;31228:26;;31301:9;31295:4;31291:20;31287:1;31276:9;31272:17;31265:47;31326:131;31452:4;31326:131;;;31318:139;;31222:245;;;;31474:407;;31665:2;31654:9;31650:18;31642:26;;31715:9;31709:4;31705:20;31701:1;31690:9;31686:17;31679:47;31740:131;31866:4;31740:131;;;31732:139;;31636:245;;;;31888:407;;32079:2;32068:9;32064:18;32056:26;;32129:9;32123:4;32119:20;32115:1;32104:9;32100:17;32093:47;32154:131;32280:4;32154:131;;;32146:139;;32050:245;;;;32302:407;;32493:2;32482:9;32478:18;32470:26;;32543:9;32537:4;32533:20;32529:1;32518:9;32514:17;32507:47;32568:131;32694:4;32568:131;;;32560:139;;32464:245;;;;32716:407;;32907:2;32896:9;32892:18;32884:26;;32957:9;32951:4;32947:20;32943:1;32932:9;32928:17;32921:47;32982:131;33108:4;32982:131;;;32974:139;;32878:245;;;;33130:407;;33321:2;33310:9;33306:18;33298:26;;33371:9;33365:4;33361:20;33357:1;33346:9;33342:17;33335:47;33396:131;33522:4;33396:131;;;33388:139;;33292:245;;;;33544:555;;33754:2;33743:9;33739:18;33731:26;;33804:9;33798:4;33794:20;33790:1;33779:9;33775:17;33768:47;33829:100;33924:4;33915:6;33829:100;;;33821:108;;33940:72;34008:2;33997:9;33993:18;33984:6;33940:72;;;34023:66;34085:2;34074:9;34070:18;34061:6;34023:66;;;33725:374;;;;;;;34106:213;;34224:2;34213:9;34209:18;34201:26;;34238:71;34306:1;34295:9;34291:17;34282:6;34238:71;;;34195:124;;;;;34326:1307;;34724:3;34713:9;34709:19;34701:27;;34739:71;34807:1;34796:9;34792:17;34783:6;34739:71;;;34858:9;34852:4;34848:20;34843:2;34832:9;34828:18;34821:48;34883:78;34956:4;34947:6;34883:78;;;34875:86;;35009:9;35003:4;34999:20;34994:2;34983:9;34979:18;34972:48;35034:78;35107:4;35098:6;35034:78;;;35026:86;;35123:72;35191:2;35180:9;35176:18;35167:6;35123:72;;;35206:81;35282:3;35271:9;35267:19;35258:6;35206:81;;;35336:9;35330:4;35326:20;35320:3;35309:9;35305:19;35298:49;35361:78;35434:4;35425:6;35361:78;;;35353:86;;35450:81;35526:3;35515:9;35511:19;35502:6;35450:81;;;35542;35618:3;35607:9;35603:19;35594:6;35542:81;;;34695:938;;;;;;;;;;;;35640:1241;;36005:3;35994:9;35990:19;35982:27;;36020:71;36088:1;36077:9;36073:17;36064:6;36020:71;;;36139:9;36133:4;36129:20;36124:2;36113:9;36109:18;36102:48;36164:75;36234:4;36225:6;36164:75;;;36156:83;;36287:9;36281:4;36277:20;36272:2;36261:9;36257:18;36250:48;36312:75;36382:4;36373:6;36312:75;;;36304:83;;36398:72;36466:2;36455:9;36451:18;36442:6;36398:72;;;36481:73;36549:3;36538:9;36534:19;36525:6;36481:73;;;36603:9;36597:4;36593:20;36587:3;36576:9;36572:19;36565:49;36628:75;36698:4;36689:6;36628:75;;;36620:83;;36714:73;36782:3;36771:9;36767:19;36758:6;36714:73;;;36798;36866:3;36855:9;36851:19;36842:6;36798:73;;;35976:905;;;;;;;;;;;;36888:324;;37034:2;37023:9;37019:18;37011:26;;37048:71;37116:1;37105:9;37101:17;37092:6;37048:71;;;37130:72;37198:2;37187:9;37183:18;37174:6;37130:72;;;37005:207;;;;;;37219:423;;37387:2;37376:9;37372:18;37364:26;;37401:71;37469:1;37458:9;37454:17;37445:6;37401:71;;;37483:72;37551:2;37540:9;37536:18;37527:6;37483:72;;;37566:66;37628:2;37617:9;37613:18;37604:6;37566:66;;;37358:284;;;;;;;37649:256;;37711:2;37705:9;37695:19;;37749:4;37741:6;37737:17;37848:6;37836:10;37833:22;37812:18;37800:10;37797:34;37794:62;37791:2;;;37869:1;37866;37859:12;37791:2;37889:10;37885:2;37878:22;37689:216;;;;;37912:321;;38055:18;38047:6;38044:30;38041:2;;;38087:1;38084;38077:12;38041:2;38154:4;38150:9;38143:4;38135:6;38131:17;38127:33;38119:41;;38218:4;38212;38208:15;38200:23;;37978:255;;;;38240:322;;38384:18;38376:6;38373:30;38370:2;;;38416:1;38413;38406:12;38370:2;38483:4;38479:9;38472:4;38464:6;38460:17;38456:33;38448:41;;38547:4;38541;38537:15;38529:23;;38307:255;;;;38569:151;;38655:3;38647:11;;38693:4;38688:3;38684:14;38676:22;;38641:79;;;;38727:158;;38795:3;38787:11;;38832:3;38829:1;38822:14;38864:4;38861:1;38851:18;38843:26;;38781:104;;;;38892:137;;39001:5;38995:12;38985:22;;38966:63;;;;39036:118;;39126:5;39120:12;39110:22;;39091:63;;;;39161:122;;39255:5;39249:12;39239:22;;39220:63;;;;39290:108;;39388:4;39383:3;39379:14;39371:22;;39365:33;;;;39406:178;;39536:6;39531:3;39524:19;39573:4;39568:3;39564:14;39549:29;;39517:67;;;;;39593:153;;39698:6;39693:3;39686:19;39735:4;39730:3;39726:14;39711:29;;39679:67;;;;;39755:163;;39870:6;39865:3;39858:19;39907:4;39902:3;39898:14;39883:29;;39851:67;;;;;39926:91;;39988:24;40006:5;39988:24;;;39977:35;;39971:46;;;;40024:99;;40094:24;40112:5;40094:24;;;40083:35;;40077:46;;;;40130:85;;40203:5;40196:13;40189:21;40178:32;;40172:43;;;;40222:144;;40294:66;40287:5;40283:78;40272:89;;40266:100;;;;40373:121;;40446:42;40439:5;40435:54;40424:65;;40418:76;;;;40501:72;;40563:5;40552:16;;40546:27;;;;40580:129;;40667:37;40698:5;40667:37;;;40654:50;;40648:61;;;;40716:116;;40803:24;40821:5;40803:24;;;40790:37;;40784:48;;;;40839:121;;40918:37;40949:5;40918:37;;;40905:50;;40899:61;;;;40967:108;;41046:24;41064:5;41046:24;;;41033:37;;41027:48;;;;41083:145;41164:6;41159:3;41154;41141:30;41220:1;41211:6;41206:3;41202:16;41195:27;41134:94;;;;41237:268;41302:1;41309:101;41323:6;41320:1;41317:13;41309:101;;;41399:1;41394:3;41390:11;41384:18;41380:1;41375:3;41371:11;41364:39;41345:2;41342:1;41338:10;41333:15;;41309:101;;;41425:6;41422:1;41419:13;41416:2;;;41490:1;41481:6;41476:3;41472:16;41465:27;41416:2;41286:219;;;;;41513:103;;41585:26;41605:5;41585:26;;;41574:37;;41568:48;;;;41623:89;;41687:20;41701:5;41687:20;;;41676:31;;41670:42;;;;41719:74;;41783:5;41772:16;;41766:27;;;;41800:97;;41888:2;41884:7;41879:2;41872:5;41868:14;41864:28;41854:38;;41848:49;;;;41905:94;;41983:5;41979:2;41975:14;41953:36;;41947:52;;;;42007:117;42076:24;42094:5;42076:24;;;42069:5;42066:35;42056:2;;42115:1;42112;42105:12;42056:2;42050:74;;42131:111;42197:21;42212:5;42197:21;;;42190:5;42187:32;42177:2;;42233:1;42230;42223:12;42177:2;42171:71;;42249:115;42317:23;42334:5;42317:23;;;42310:5;42307:34;42297:2;;42355:1;42352;42345:12;42297:2;42291:73;;42371:117;42440:24;42458:5;42440:24;;;42433:5;42430:35;42420:2;;42479:1;42476;42469:12;42420:2;42414:74;",
  "source": "pragma solidity >= 0.5.0;\npragma experimental ABIEncoderV2;\n\nimport \"./Breeding.sol\";\nimport \"./BidAuction.sol\";\n\ncontract Fighting is Breeding, BidAuction{\n\nstruct FightAnimal{\n    uint animalId;\n    uint readyToFight;\n}\n\nFightAnimal[] public fightAnimals;\n\n    function fight(uint _fightAnimalId1, uint _fightAnimalId2) public OwnerOf(_fightAnimalId1) {\n        require(fightAnimals[_fightAnimalId2].readyToFight >= 2 days, \"The animal you want to fight is not ready\");\n        uint rand = randMod(2);\n        if(rand == 1){\n            animals[fightAnimals[_fightAnimalId1].animalId].winCount.add(1);\n            animals[fightAnimals[_fightAnimalId2].animalId].lossCount.add(1);\n        }\n        else {\n            animals[fightAnimals[_fightAnimalId2].animalId].winCount.add(1);\n            animals[fightAnimals[_fightAnimalId1].animalId].lossCount.add(1);\n        }\n    }\n}\n",
  "sourcePath": "C:\\Users\\torta\\OneDrive\\Documents\\ESILV\\Semestre 2\\Blockchain Programming\\OPEN ZEPPELIN\\node_modules\\@openzeppelin\\TD6-ERC721\\contracts\\Fighting.sol",
  "ast": {
    "absolutePath": "/C/Users/torta/OneDrive/Documents/ESILV/Semestre 2/Blockchain Programming/OPEN ZEPPELIN/node_modules/@openzeppelin/TD6-ERC721/contracts/Fighting.sol",
    "exportedSymbols": {
      "Fighting": [
        1645
      ]
    },
    "id": 1646,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1552,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:25:7"
      },
      {
        "id": 1553,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "26:33:7"
      },
      {
        "absolutePath": "/C/Users/torta/OneDrive/Documents/ESILV/Semestre 2/Blockchain Programming/OPEN ZEPPELIN/node_modules/@openzeppelin/TD6-ERC721/contracts/Breeding.sol",
        "file": "./Breeding.sol",
        "id": 1554,
        "nodeType": "ImportDirective",
        "scope": 1646,
        "sourceUnit": 828,
        "src": "61:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/torta/OneDrive/Documents/ESILV/Semestre 2/Blockchain Programming/OPEN ZEPPELIN/node_modules/@openzeppelin/TD6-ERC721/contracts/BidAuction.sol",
        "file": "./BidAuction.sol",
        "id": 1555,
        "nodeType": "ImportDirective",
        "scope": 1646,
        "sourceUnit": 400,
        "src": "86:26:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1556,
              "name": "Breeding",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 827,
              "src": "135:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Breeding_$827",
                "typeString": "contract Breeding"
              }
            },
            "id": 1557,
            "nodeType": "InheritanceSpecifier",
            "src": "135:8:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1558,
              "name": "BidAuction",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 399,
              "src": "145:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BidAuction_$399",
                "typeString": "contract BidAuction"
              }
            },
            "id": 1559,
            "nodeType": "InheritanceSpecifier",
            "src": "145:10:7"
          }
        ],
        "contractDependencies": [
          399,
          827,
          854,
          956,
          1550,
          1655,
          1758,
          1953
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1645,
        "linearizedBaseContracts": [
          1645,
          399,
          827,
          1953,
          1550,
          1758,
          956,
          1655,
          854
        ],
        "name": "Fighting",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Fighting.FightAnimal",
            "id": 1564,
            "members": [
              {
                "constant": false,
                "id": 1561,
                "name": "animalId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1564,
                "src": "182:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1560,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "182:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1563,
                "name": "readyToFight",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1564,
                "src": "201:17:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1562,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "201:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "FightAnimal",
            "nodeType": "StructDefinition",
            "scope": 1645,
            "src": "158:63:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4723fc53",
            "id": 1567,
            "name": "fightAnimals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1645,
            "src": "223:33:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_FightAnimal_$1564_storage_$dyn_storage",
              "typeString": "struct Fighting.FightAnimal[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 1565,
                "name": "FightAnimal",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1564,
                "src": "223:11:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_FightAnimal_$1564_storage_ptr",
                  "typeString": "struct Fighting.FightAnimal"
                }
              },
              "id": 1566,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "223:13:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_FightAnimal_$1564_storage_$dyn_storage_ptr",
                "typeString": "struct Fighting.FightAnimal[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1643,
              "nodeType": "Block",
              "src": "354:523:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1578,
                              "name": "fightAnimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1567,
                              "src": "372:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FightAnimal_$1564_storage_$dyn_storage",
                                "typeString": "struct Fighting.FightAnimal storage ref[] storage ref"
                              }
                            },
                            "id": 1580,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1579,
                              "name": "_fightAnimalId2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1571,
                              "src": "385:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "372:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FightAnimal_$1564_storage",
                              "typeString": "struct Fighting.FightAnimal storage ref"
                            }
                          },
                          "id": 1581,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "readyToFight",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1563,
                          "src": "372:42:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 1582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "418:6:7",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_172800_by_1",
                            "typeString": "int_const 172800"
                          },
                          "value": "2"
                        },
                        "src": "372:52:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520616e696d616c20796f752077616e7420746f206669676874206973206e6f74207265616479",
                        "id": 1584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "426:43:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e3e30959cca028a6893202d4927e5af8829e42b08cf48d3dd47cf225c8ceca9",
                          "typeString": "literal_string \"The animal you want to fight is not ready\""
                        },
                        "value": "The animal you want to fight is not ready"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e3e30959cca028a6893202d4927e5af8829e42b08cf48d3dd47cf225c8ceca9",
                          "typeString": "literal_string \"The animal you want to fight is not ready\""
                        }
                      ],
                      "id": 1577,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2158,
                        2159
                      ],
                      "referencedDeclaration": 2159,
                      "src": "364:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "364:106:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1586,
                  "nodeType": "ExpressionStatement",
                  "src": "364:106:7"
                },
                {
                  "assignments": [
                    1588
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1588,
                      "name": "rand",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1643,
                      "src": "480:9:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1587,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "480:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1592,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "500:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 1589,
                      "name": "randMod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 669,
                      "src": "492:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "492:10:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "480:22:7"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1593,
                      "name": "rand",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1588,
                      "src": "515:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "523:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "515:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1641,
                    "nodeType": "Block",
                    "src": "705:166:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1627,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "780:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1619,
                                  "name": "animals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 426,
                                  "src": "719:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Animal_$423_storage_$dyn_storage",
                                    "typeString": "struct Breeding.Animal storage ref[] storage ref"
                                  }
                                },
                                "id": 1624,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1620,
                                      "name": "fightAnimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1567,
                                      "src": "727:12:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_FightAnimal_$1564_storage_$dyn_storage",
                                        "typeString": "struct Fighting.FightAnimal storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1622,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1621,
                                      "name": "_fightAnimalId2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1571,
                                      "src": "740:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "727:29:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_FightAnimal_$1564_storage",
                                      "typeString": "struct Fighting.FightAnimal storage ref"
                                    }
                                  },
                                  "id": 1623,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "animalId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1561,
                                  "src": "727:38:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "719:47:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Animal_$423_storage",
                                  "typeString": "struct Breeding.Animal storage ref"
                                }
                              },
                              "id": 1625,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "winCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 420,
                              "src": "719:56:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1980,
                            "src": "719:60:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "719:63:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1629,
                        "nodeType": "ExpressionStatement",
                        "src": "719:63:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "858:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1630,
                                  "name": "animals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 426,
                                  "src": "796:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Animal_$423_storage_$dyn_storage",
                                    "typeString": "struct Breeding.Animal storage ref[] storage ref"
                                  }
                                },
                                "id": 1635,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1631,
                                      "name": "fightAnimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1567,
                                      "src": "804:12:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_FightAnimal_$1564_storage_$dyn_storage",
                                        "typeString": "struct Fighting.FightAnimal storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1633,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1632,
                                      "name": "_fightAnimalId1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1569,
                                      "src": "817:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "804:29:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_FightAnimal_$1564_storage",
                                      "typeString": "struct Fighting.FightAnimal storage ref"
                                    }
                                  },
                                  "id": 1634,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "animalId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1561,
                                  "src": "804:38:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "796:47:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Animal_$423_storage",
                                  "typeString": "struct Breeding.Animal storage ref"
                                }
                              },
                              "id": 1636,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lossCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 422,
                              "src": "796:57:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1980,
                            "src": "796:61:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "796:64:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1640,
                        "nodeType": "ExpressionStatement",
                        "src": "796:64:7"
                      }
                    ]
                  },
                  "id": 1642,
                  "nodeType": "IfStatement",
                  "src": "512:359:7",
                  "trueBody": {
                    "id": 1618,
                    "nodeType": "Block",
                    "src": "525:166:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "600:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1596,
                                  "name": "animals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 426,
                                  "src": "539:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Animal_$423_storage_$dyn_storage",
                                    "typeString": "struct Breeding.Animal storage ref[] storage ref"
                                  }
                                },
                                "id": 1601,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1597,
                                      "name": "fightAnimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1567,
                                      "src": "547:12:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_FightAnimal_$1564_storage_$dyn_storage",
                                        "typeString": "struct Fighting.FightAnimal storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1599,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1598,
                                      "name": "_fightAnimalId1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1569,
                                      "src": "560:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "547:29:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_FightAnimal_$1564_storage",
                                      "typeString": "struct Fighting.FightAnimal storage ref"
                                    }
                                  },
                                  "id": 1600,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "animalId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1561,
                                  "src": "547:38:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "539:47:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Animal_$423_storage",
                                  "typeString": "struct Breeding.Animal storage ref"
                                }
                              },
                              "id": 1602,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "winCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 420,
                              "src": "539:56:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1980,
                            "src": "539:60:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "539:63:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1606,
                        "nodeType": "ExpressionStatement",
                        "src": "539:63:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "678:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1607,
                                  "name": "animals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 426,
                                  "src": "616:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Animal_$423_storage_$dyn_storage",
                                    "typeString": "struct Breeding.Animal storage ref[] storage ref"
                                  }
                                },
                                "id": 1612,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1608,
                                      "name": "fightAnimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1567,
                                      "src": "624:12:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_FightAnimal_$1564_storage_$dyn_storage",
                                        "typeString": "struct Fighting.FightAnimal storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1610,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1609,
                                      "name": "_fightAnimalId2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1571,
                                      "src": "637:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "624:29:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_FightAnimal_$1564_storage",
                                      "typeString": "struct Fighting.FightAnimal storage ref"
                                    }
                                  },
                                  "id": 1611,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "animalId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1561,
                                  "src": "624:38:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "616:47:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Animal_$423_storage",
                                  "typeString": "struct Breeding.Animal storage ref"
                                }
                              },
                              "id": 1613,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lossCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 422,
                              "src": "616:57:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1980,
                            "src": "616:61:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "616:64:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1617,
                        "nodeType": "ExpressionStatement",
                        "src": "616:64:7"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ca39e5ef",
            "id": 1644,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1574,
                    "name": "_fightAnimalId1",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1569,
                    "src": "337:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1575,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1573,
                  "name": "OwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 817,
                  "src": "329:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "329:24:7"
              }
            ],
            "name": "fight",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1569,
                  "name": "_fightAnimalId1",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1644,
                  "src": "278:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "278:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1571,
                  "name": "_fightAnimalId2",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1644,
                  "src": "300:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1570,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "300:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "277:44:7"
            },
            "returnParameters": {
              "id": 1576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "354:0:7"
            },
            "scope": 1645,
            "src": "263:614:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1646,
        "src": "114:765:7"
      }
    ],
    "src": "0:880:7"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/torta/OneDrive/Documents/ESILV/Semestre 2/Blockchain Programming/OPEN ZEPPELIN/node_modules/@openzeppelin/TD6-ERC721/contracts/Fighting.sol",
    "exportedSymbols": {
      "Fighting": [
        1645
      ]
    },
    "id": 1646,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1552,
        "literals": [
          "solidity",
          ">=",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:25:7"
      },
      {
        "id": 1553,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "26:33:7"
      },
      {
        "absolutePath": "/C/Users/torta/OneDrive/Documents/ESILV/Semestre 2/Blockchain Programming/OPEN ZEPPELIN/node_modules/@openzeppelin/TD6-ERC721/contracts/Breeding.sol",
        "file": "./Breeding.sol",
        "id": 1554,
        "nodeType": "ImportDirective",
        "scope": 1646,
        "sourceUnit": 828,
        "src": "61:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/C/Users/torta/OneDrive/Documents/ESILV/Semestre 2/Blockchain Programming/OPEN ZEPPELIN/node_modules/@openzeppelin/TD6-ERC721/contracts/BidAuction.sol",
        "file": "./BidAuction.sol",
        "id": 1555,
        "nodeType": "ImportDirective",
        "scope": 1646,
        "sourceUnit": 400,
        "src": "86:26:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1556,
              "name": "Breeding",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 827,
              "src": "135:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Breeding_$827",
                "typeString": "contract Breeding"
              }
            },
            "id": 1557,
            "nodeType": "InheritanceSpecifier",
            "src": "135:8:7"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 1558,
              "name": "BidAuction",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 399,
              "src": "145:10:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BidAuction_$399",
                "typeString": "contract BidAuction"
              }
            },
            "id": 1559,
            "nodeType": "InheritanceSpecifier",
            "src": "145:10:7"
          }
        ],
        "contractDependencies": [
          399,
          827,
          854,
          956,
          1550,
          1655,
          1758,
          1953
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 1645,
        "linearizedBaseContracts": [
          1645,
          399,
          827,
          1953,
          1550,
          1758,
          956,
          1655,
          854
        ],
        "name": "Fighting",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Fighting.FightAnimal",
            "id": 1564,
            "members": [
              {
                "constant": false,
                "id": 1561,
                "name": "animalId",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1564,
                "src": "182:13:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1560,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "182:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 1563,
                "name": "readyToFight",
                "nodeType": "VariableDeclaration",
                "overrides": null,
                "scope": 1564,
                "src": "201:17:7",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 1562,
                  "name": "uint",
                  "nodeType": "ElementaryTypeName",
                  "src": "201:4:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "FightAnimal",
            "nodeType": "StructDefinition",
            "scope": 1645,
            "src": "158:63:7",
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "4723fc53",
            "id": 1567,
            "name": "fightAnimals",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 1645,
            "src": "223:33:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_FightAnimal_$1564_storage_$dyn_storage",
              "typeString": "struct Fighting.FightAnimal[]"
            },
            "typeName": {
              "baseType": {
                "contractScope": null,
                "id": 1565,
                "name": "FightAnimal",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 1564,
                "src": "223:11:7",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_FightAnimal_$1564_storage_ptr",
                  "typeString": "struct Fighting.FightAnimal"
                }
              },
              "id": 1566,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "223:13:7",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_FightAnimal_$1564_storage_$dyn_storage_ptr",
                "typeString": "struct Fighting.FightAnimal[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1643,
              "nodeType": "Block",
              "src": "354:523:7",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 1578,
                              "name": "fightAnimals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1567,
                              "src": "372:12:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_FightAnimal_$1564_storage_$dyn_storage",
                                "typeString": "struct Fighting.FightAnimal storage ref[] storage ref"
                              }
                            },
                            "id": 1580,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 1579,
                              "name": "_fightAnimalId2",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1571,
                              "src": "385:15:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "372:29:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_FightAnimal_$1564_storage",
                              "typeString": "struct Fighting.FightAnimal storage ref"
                            }
                          },
                          "id": 1581,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "readyToFight",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1563,
                          "src": "372:42:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "32",
                          "id": 1582,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "418:6:7",
                          "subdenomination": "days",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_172800_by_1",
                            "typeString": "int_const 172800"
                          },
                          "value": "2"
                        },
                        "src": "372:52:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "54686520616e696d616c20796f752077616e7420746f206669676874206973206e6f74207265616479",
                        "id": 1584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "426:43:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5e3e30959cca028a6893202d4927e5af8829e42b08cf48d3dd47cf225c8ceca9",
                          "typeString": "literal_string \"The animal you want to fight is not ready\""
                        },
                        "value": "The animal you want to fight is not ready"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5e3e30959cca028a6893202d4927e5af8829e42b08cf48d3dd47cf225c8ceca9",
                          "typeString": "literal_string \"The animal you want to fight is not ready\""
                        }
                      ],
                      "id": 1577,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2158,
                        2159
                      ],
                      "referencedDeclaration": 2159,
                      "src": "364:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "364:106:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1586,
                  "nodeType": "ExpressionStatement",
                  "src": "364:106:7"
                },
                {
                  "assignments": [
                    1588
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1588,
                      "name": "rand",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 1643,
                      "src": "480:9:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1587,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "480:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 1592,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 1590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "500:1:7",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        }
                      ],
                      "id": 1589,
                      "name": "randMod",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 669,
                      "src": "492:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 1591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "492:10:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "480:22:7"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 1593,
                      "name": "rand",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1588,
                      "src": "515:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 1594,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "523:1:7",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "515:9:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1641,
                    "nodeType": "Block",
                    "src": "705:166:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1627,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "780:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1619,
                                  "name": "animals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 426,
                                  "src": "719:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Animal_$423_storage_$dyn_storage",
                                    "typeString": "struct Breeding.Animal storage ref[] storage ref"
                                  }
                                },
                                "id": 1624,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1620,
                                      "name": "fightAnimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1567,
                                      "src": "727:12:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_FightAnimal_$1564_storage_$dyn_storage",
                                        "typeString": "struct Fighting.FightAnimal storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1622,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1621,
                                      "name": "_fightAnimalId2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1571,
                                      "src": "740:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "727:29:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_FightAnimal_$1564_storage",
                                      "typeString": "struct Fighting.FightAnimal storage ref"
                                    }
                                  },
                                  "id": 1623,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "animalId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1561,
                                  "src": "727:38:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "719:47:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Animal_$423_storage",
                                  "typeString": "struct Breeding.Animal storage ref"
                                }
                              },
                              "id": 1625,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "winCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 420,
                              "src": "719:56:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1626,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1980,
                            "src": "719:60:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "719:63:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1629,
                        "nodeType": "ExpressionStatement",
                        "src": "719:63:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1638,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "858:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1630,
                                  "name": "animals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 426,
                                  "src": "796:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Animal_$423_storage_$dyn_storage",
                                    "typeString": "struct Breeding.Animal storage ref[] storage ref"
                                  }
                                },
                                "id": 1635,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1631,
                                      "name": "fightAnimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1567,
                                      "src": "804:12:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_FightAnimal_$1564_storage_$dyn_storage",
                                        "typeString": "struct Fighting.FightAnimal storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1633,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1632,
                                      "name": "_fightAnimalId1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1569,
                                      "src": "817:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "804:29:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_FightAnimal_$1564_storage",
                                      "typeString": "struct Fighting.FightAnimal storage ref"
                                    }
                                  },
                                  "id": 1634,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "animalId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1561,
                                  "src": "804:38:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "796:47:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Animal_$423_storage",
                                  "typeString": "struct Breeding.Animal storage ref"
                                }
                              },
                              "id": 1636,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lossCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 422,
                              "src": "796:57:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1980,
                            "src": "796:61:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "796:64:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1640,
                        "nodeType": "ExpressionStatement",
                        "src": "796:64:7"
                      }
                    ]
                  },
                  "id": 1642,
                  "nodeType": "IfStatement",
                  "src": "512:359:7",
                  "trueBody": {
                    "id": 1618,
                    "nodeType": "Block",
                    "src": "525:166:7",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "600:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1596,
                                  "name": "animals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 426,
                                  "src": "539:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Animal_$423_storage_$dyn_storage",
                                    "typeString": "struct Breeding.Animal storage ref[] storage ref"
                                  }
                                },
                                "id": 1601,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1597,
                                      "name": "fightAnimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1567,
                                      "src": "547:12:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_FightAnimal_$1564_storage_$dyn_storage",
                                        "typeString": "struct Fighting.FightAnimal storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1599,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1598,
                                      "name": "_fightAnimalId1",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1569,
                                      "src": "560:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "547:29:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_FightAnimal_$1564_storage",
                                      "typeString": "struct Fighting.FightAnimal storage ref"
                                    }
                                  },
                                  "id": 1600,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "animalId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1561,
                                  "src": "547:38:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "539:47:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Animal_$423_storage",
                                  "typeString": "struct Breeding.Animal storage ref"
                                }
                              },
                              "id": 1602,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "winCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 420,
                              "src": "539:56:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1980,
                            "src": "539:60:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "539:63:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1606,
                        "nodeType": "ExpressionStatement",
                        "src": "539:63:7"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "31",
                              "id": 1615,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "678:1:7",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 1607,
                                  "name": "animals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 426,
                                  "src": "616:7:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Animal_$423_storage_$dyn_storage",
                                    "typeString": "struct Breeding.Animal storage ref[] storage ref"
                                  }
                                },
                                "id": 1612,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "baseExpression": {
                                      "argumentTypes": null,
                                      "id": 1608,
                                      "name": "fightAnimals",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1567,
                                      "src": "624:12:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_FightAnimal_$1564_storage_$dyn_storage",
                                        "typeString": "struct Fighting.FightAnimal storage ref[] storage ref"
                                      }
                                    },
                                    "id": 1610,
                                    "indexExpression": {
                                      "argumentTypes": null,
                                      "id": 1609,
                                      "name": "_fightAnimalId2",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1571,
                                      "src": "637:15:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "624:29:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_FightAnimal_$1564_storage",
                                      "typeString": "struct Fighting.FightAnimal storage ref"
                                    }
                                  },
                                  "id": 1611,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "animalId",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1561,
                                  "src": "624:38:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "616:47:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Animal_$423_storage",
                                  "typeString": "struct Breeding.Animal storage ref"
                                }
                              },
                              "id": 1613,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "lossCount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 422,
                              "src": "616:57:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1614,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1980,
                            "src": "616:61:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 1616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "616:64:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1617,
                        "nodeType": "ExpressionStatement",
                        "src": "616:64:7"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": null,
            "functionSelector": "ca39e5ef",
            "id": 1644,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 1574,
                    "name": "_fightAnimalId1",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1569,
                    "src": "337:15:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 1575,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 1573,
                  "name": "OwnerOf",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 817,
                  "src": "329:7:7",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$_t_uint256_$",
                    "typeString": "modifier (uint256)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "329:24:7"
              }
            ],
            "name": "fight",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 1572,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1569,
                  "name": "_fightAnimalId1",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1644,
                  "src": "278:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1568,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "278:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1571,
                  "name": "_fightAnimalId2",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 1644,
                  "src": "300:20:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1570,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "300:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "277:44:7"
            },
            "returnParameters": {
              "id": 1576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "354:0:7"
            },
            "scope": 1645,
            "src": "263:614:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1646,
        "src": "114:765:7"
      }
    ],
    "src": "0:880:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.0+commit.26b70077.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x336caae23f7c926c563a756c493d2e4186fe8ea365ea75f8813cb36882a2c088": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "animalId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "name": "AnimalSoldAuction",
          "type": "event"
        },
        "0x35fd122dfbf8007a96d6033dd1956c772bfc1009f4e22dba88c751beb2c94ebd": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "animalId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "species",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "age",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "readyTime",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "color",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "winCount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "lossCount",
              "type": "uint256"
            }
          ],
          "name": "AnimalToBid",
          "type": "event"
        },
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "approved",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "name": "ApprovalForAll",
          "type": "event"
        },
        "0x8a6fde0c0f8077884948daef31fc0b7565d15b1944dbd05612fe54e358bb7a16": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "Id1",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "Id2",
              "type": "uint256"
            }
          ],
          "name": "BreedAnimal",
          "type": "event"
        },
        "0xf341316c37c0df80453d7a29598468138ffcfe7c833ec00e80ccc5772369905b": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "Id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_species",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "age",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_readyTime",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_color",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "winCount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "lossCount",
              "type": "uint256"
            }
          ],
          "name": "DeadAnimal",
          "type": "event"
        },
        "0x2ed0a6a4f66e6a39321eb2bbd734537cacdbc5aec9e3686afdb9a5c1bbdb1b27": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "Id",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_species",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "age",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_readyTime",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "string",
              "name": "_color",
              "type": "string"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "winCount",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "lossCount",
              "type": "uint256"
            }
          ],
          "name": "NewAnimal",
          "type": "event"
        },
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        },
        "0xc33aa4393fdbbf1d92280c505235f4a5f7ad1524676d96bb2376428fe731d434": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "_bidAnimalId",
              "type": "uint256"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "price",
              "type": "uint256"
            }
          ],
          "name": "UpdatedAuction",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xad9fdE479FAFEC5708BA2b5997c61bd65be3860C",
      "transactionHash": "0xe5656be2f924a67b9002ad83e6bfff1ff560394bc5c87e897d18f844d0dfb116"
    }
  },
  "schemaVersion": "3.0.23",
  "updatedAt": "2020-03-11T15:20:56.357Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "returns": {
          "_0": "uint256 representing the amount owned by the passed address"
        }
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "returns": {
          "_0": "address currently approved for the given token ID"
        }
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "returns": {
          "_0": "bool whether the given operator is approved by the given owner"
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "returns": {
          "_0": "address currently marked as the owner of the given token ID"
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the _msgSender() to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}